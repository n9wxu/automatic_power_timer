

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue May 23 21:22:55 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F15313
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Generated 19/07/2022 GMT
    30                           ; 
    31                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F15313 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     0007                     	;# 
    71     0008                     	;# 
    72     0009                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     0012                     	;# 
    77     0018                     	;# 
    78     009B                     	;# 
    79     009B                     	;# 
    80     009C                     	;# 
    81     009D                     	;# 
    82     009E                     	;# 
    83     009F                     	;# 
    84     0119                     	;# 
    85     0119                     	;# 
    86     0119                     	;# 
    87     011A                     	;# 
    88     011A                     	;# 
    89     011A                     	;# 
    90     011B                     	;# 
    91     011B                     	;# 
    92     011B                     	;# 
    93     011B                     	;# 
    94     011B                     	;# 
    95     011C                     	;# 
    96     011C                     	;# 
    97     011C                     	;# 
    98     011D                     	;# 
    99     011D                     	;# 
   100     011D                     	;# 
   101     011E                     	;# 
   102     011E                     	;# 
   103     011E                     	;# 
   104     011F                     	;# 
   105     011F                     	;# 
   106     011F                     	;# 
   107     011F                     	;# 
   108     011F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     018E                     	;# 
   112     018F                     	;# 
   113     0190                     	;# 
   114     0191                     	;# 
   115     0192                     	;# 
   116     020C                     	;# 
   117     020C                     	;# 
   118     020D                     	;# 
   119     020E                     	;# 
   120     020F                     	;# 
   121     020F                     	;# 
   122     0210                     	;# 
   123     0210                     	;# 
   124     0211                     	;# 
   125     0211                     	;# 
   126     028C                     	;# 
   127     028C                     	;# 
   128     028D                     	;# 
   129     028D                     	;# 
   130     028E                     	;# 
   131     028F                     	;# 
   132     0290                     	;# 
   133     0291                     	;# 
   134     030C                     	;# 
   135     030C                     	;# 
   136     030D                     	;# 
   137     030E                     	;# 
   138     030F                     	;# 
   139     0310                     	;# 
   140     0310                     	;# 
   141     0311                     	;# 
   142     0312                     	;# 
   143     0313                     	;# 
   144     0314                     	;# 
   145     0314                     	;# 
   146     0315                     	;# 
   147     0316                     	;# 
   148     0318                     	;# 
   149     0318                     	;# 
   150     0319                     	;# 
   151     031A                     	;# 
   152     031C                     	;# 
   153     031C                     	;# 
   154     031D                     	;# 
   155     031E                     	;# 
   156     038C                     	;# 
   157     038C                     	;# 
   158     038D                     	;# 
   159     038E                     	;# 
   160     058C                     	;# 
   161     058C                     	;# 
   162     058D                     	;# 
   163     058E                     	;# 
   164     058F                     	;# 
   165     058F                     	;# 
   166     0590                     	;# 
   167     0591                     	;# 
   168     0592                     	;# 
   169     0593                     	;# 
   170     059C                     	;# 
   171     059C                     	;# 
   172     059D                     	;# 
   173     059D                     	;# 
   174     059E                     	;# 
   175     059F                     	;# 
   176     060C                     	;# 
   177     060D                     	;# 
   178     060E                     	;# 
   179     060F                     	;# 
   180     0610                     	;# 
   181     0611                     	;# 
   182     0612                     	;# 
   183     0613                     	;# 
   184     0614                     	;# 
   185     070C                     	;# 
   186     070D                     	;# 
   187     070E                     	;# 
   188     070F                     	;# 
   189     0710                     	;# 
   190     0711                     	;# 
   191     0712                     	;# 
   192     0713                     	;# 
   193     0716                     	;# 
   194     0717                     	;# 
   195     0718                     	;# 
   196     0719                     	;# 
   197     071A                     	;# 
   198     071B                     	;# 
   199     071C                     	;# 
   200     071D                     	;# 
   201     0796                     	;# 
   202     0797                     	;# 
   203     0798                     	;# 
   204     0799                     	;# 
   205     079A                     	;# 
   206     079B                     	;# 
   207     080C                     	;# 
   208     080D                     	;# 
   209     080E                     	;# 
   210     080F                     	;# 
   211     0810                     	;# 
   212     0811                     	;# 
   213     0812                     	;# 
   214     0813                     	;# 
   215     0814                     	;# 
   216     081A                     	;# 
   217     081A                     	;# 
   218     081B                     	;# 
   219     081C                     	;# 
   220     081C                     	;# 
   221     081D                     	;# 
   222     081E                     	;# 
   223     081F                     	;# 
   224     088C                     	;# 
   225     088D                     	;# 
   226     088E                     	;# 
   227     088F                     	;# 
   228     0890                     	;# 
   229     0891                     	;# 
   230     0892                     	;# 
   231     0893                     	;# 
   232     0895                     	;# 
   233     0896                     	;# 
   234     090C                     	;# 
   235     090E                     	;# 
   236     090F                     	;# 
   237     091F                     	;# 
   238     098F                     	;# 
   239     098F                     	;# 
   240     0990                     	;# 
   241     0991                     	;# 
   242     0992                     	;# 
   243     0993                     	;# 
   244     1E0F                     	;# 
   245     1E10                     	;# 
   246     1E11                     	;# 
   247     1E12                     	;# 
   248     1E13                     	;# 
   249     1E14                     	;# 
   250     1E15                     	;# 
   251     1E16                     	;# 
   252     1E17                     	;# 
   253     1E18                     	;# 
   254     1E19                     	;# 
   255     1E1A                     	;# 
   256     1E1B                     	;# 
   257     1E1C                     	;# 
   258     1E1D                     	;# 
   259     1E1E                     	;# 
   260     1E1F                     	;# 
   261     1E20                     	;# 
   262     1E21                     	;# 
   263     1E22                     	;# 
   264     1E23                     	;# 
   265     1E24                     	;# 
   266     1E25                     	;# 
   267     1E26                     	;# 
   268     1E27                     	;# 
   269     1E28                     	;# 
   270     1E29                     	;# 
   271     1E2A                     	;# 
   272     1E2B                     	;# 
   273     1E2C                     	;# 
   274     1E2D                     	;# 
   275     1E2E                     	;# 
   276     1E2F                     	;# 
   277     1E30                     	;# 
   278     1E31                     	;# 
   279     1E32                     	;# 
   280     1E33                     	;# 
   281     1E34                     	;# 
   282     1E35                     	;# 
   283     1E36                     	;# 
   284     1E37                     	;# 
   285     1E8F                     	;# 
   286     1E90                     	;# 
   287     1E91                     	;# 
   288     1E92                     	;# 
   289     1E93                     	;# 
   290     1E9C                     	;# 
   291     1EA1                     	;# 
   292     1EA2                     	;# 
   293     1EB1                     	;# 
   294     1EBB                     	;# 
   295     1EBC                     	;# 
   296     1EBD                     	;# 
   297     1EBE                     	;# 
   298     1EC3                     	;# 
   299     1EC5                     	;# 
   300     1EC6                     	;# 
   301     1EC7                     	;# 
   302     1ECB                     	;# 
   303     1ECC                     	;# 
   304     1F10                     	;# 
   305     1F11                     	;# 
   306     1F12                     	;# 
   307     1F13                     	;# 
   308     1F14                     	;# 
   309     1F15                     	;# 
   310     1F38                     	;# 
   311     1F39                     	;# 
   312     1F3A                     	;# 
   313     1F3B                     	;# 
   314     1F3C                     	;# 
   315     1F3D                     	;# 
   316     1F3E                     	;# 
   317     1F3F                     	;# 
   318     1FE4                     	;# 
   319     1FE5                     	;# 
   320     1FE6                     	;# 
   321     1FE7                     	;# 
   322     1FE8                     	;# 
   323     1FE8                     	;# 
   324     1FE9                     	;# 
   325     1FEA                     	;# 
   326     1FEA                     	;# 
   327     1FEB                     	;# 
   328     1FED                     	;# 
   329     1FEE                     	;# 
   330     1FEF                     	;# 
   331     0000                     	;# 
   332     0001                     	;# 
   333     0002                     	;# 
   334     0003                     	;# 
   335     0004                     	;# 
   336     0005                     	;# 
   337     0006                     	;# 
   338     0007                     	;# 
   339     0008                     	;# 
   340     0009                     	;# 
   341     000A                     	;# 
   342     000B                     	;# 
   343     000C                     	;# 
   344     0012                     	;# 
   345     0018                     	;# 
   346     009B                     	;# 
   347     009B                     	;# 
   348     009C                     	;# 
   349     009D                     	;# 
   350     009E                     	;# 
   351     009F                     	;# 
   352     0119                     	;# 
   353     0119                     	;# 
   354     0119                     	;# 
   355     011A                     	;# 
   356     011A                     	;# 
   357     011A                     	;# 
   358     011B                     	;# 
   359     011B                     	;# 
   360     011B                     	;# 
   361     011B                     	;# 
   362     011B                     	;# 
   363     011C                     	;# 
   364     011C                     	;# 
   365     011C                     	;# 
   366     011D                     	;# 
   367     011D                     	;# 
   368     011D                     	;# 
   369     011E                     	;# 
   370     011E                     	;# 
   371     011E                     	;# 
   372     011F                     	;# 
   373     011F                     	;# 
   374     011F                     	;# 
   375     011F                     	;# 
   376     011F                     	;# 
   377     018C                     	;# 
   378     018D                     	;# 
   379     018E                     	;# 
   380     018F                     	;# 
   381     0190                     	;# 
   382     0191                     	;# 
   383     0192                     	;# 
   384     020C                     	;# 
   385     020C                     	;# 
   386     020D                     	;# 
   387     020E                     	;# 
   388     020F                     	;# 
   389     020F                     	;# 
   390     0210                     	;# 
   391     0210                     	;# 
   392     0211                     	;# 
   393     0211                     	;# 
   394     028C                     	;# 
   395     028C                     	;# 
   396     028D                     	;# 
   397     028D                     	;# 
   398     028E                     	;# 
   399     028F                     	;# 
   400     0290                     	;# 
   401     0291                     	;# 
   402     030C                     	;# 
   403     030C                     	;# 
   404     030D                     	;# 
   405     030E                     	;# 
   406     030F                     	;# 
   407     0310                     	;# 
   408     0310                     	;# 
   409     0311                     	;# 
   410     0312                     	;# 
   411     0313                     	;# 
   412     0314                     	;# 
   413     0314                     	;# 
   414     0315                     	;# 
   415     0316                     	;# 
   416     0318                     	;# 
   417     0318                     	;# 
   418     0319                     	;# 
   419     031A                     	;# 
   420     031C                     	;# 
   421     031C                     	;# 
   422     031D                     	;# 
   423     031E                     	;# 
   424     038C                     	;# 
   425     038C                     	;# 
   426     038D                     	;# 
   427     038E                     	;# 
   428     058C                     	;# 
   429     058C                     	;# 
   430     058D                     	;# 
   431     058E                     	;# 
   432     058F                     	;# 
   433     058F                     	;# 
   434     0590                     	;# 
   435     0591                     	;# 
   436     0592                     	;# 
   437     0593                     	;# 
   438     059C                     	;# 
   439     059C                     	;# 
   440     059D                     	;# 
   441     059D                     	;# 
   442     059E                     	;# 
   443     059F                     	;# 
   444     060C                     	;# 
   445     060D                     	;# 
   446     060E                     	;# 
   447     060F                     	;# 
   448     0610                     	;# 
   449     0611                     	;# 
   450     0612                     	;# 
   451     0613                     	;# 
   452     0614                     	;# 
   453     070C                     	;# 
   454     070D                     	;# 
   455     070E                     	;# 
   456     070F                     	;# 
   457     0710                     	;# 
   458     0711                     	;# 
   459     0712                     	;# 
   460     0713                     	;# 
   461     0716                     	;# 
   462     0717                     	;# 
   463     0718                     	;# 
   464     0719                     	;# 
   465     071A                     	;# 
   466     071B                     	;# 
   467     071C                     	;# 
   468     071D                     	;# 
   469     0796                     	;# 
   470     0797                     	;# 
   471     0798                     	;# 
   472     0799                     	;# 
   473     079A                     	;# 
   474     079B                     	;# 
   475     080C                     	;# 
   476     080D                     	;# 
   477     080E                     	;# 
   478     080F                     	;# 
   479     0810                     	;# 
   480     0811                     	;# 
   481     0812                     	;# 
   482     0813                     	;# 
   483     0814                     	;# 
   484     081A                     	;# 
   485     081A                     	;# 
   486     081B                     	;# 
   487     081C                     	;# 
   488     081C                     	;# 
   489     081D                     	;# 
   490     081E                     	;# 
   491     081F                     	;# 
   492     088C                     	;# 
   493     088D                     	;# 
   494     088E                     	;# 
   495     088F                     	;# 
   496     0890                     	;# 
   497     0891                     	;# 
   498     0892                     	;# 
   499     0893                     	;# 
   500     0895                     	;# 
   501     0896                     	;# 
   502     090C                     	;# 
   503     090E                     	;# 
   504     090F                     	;# 
   505     091F                     	;# 
   506     098F                     	;# 
   507     098F                     	;# 
   508     0990                     	;# 
   509     0991                     	;# 
   510     0992                     	;# 
   511     0993                     	;# 
   512     1E0F                     	;# 
   513     1E10                     	;# 
   514     1E11                     	;# 
   515     1E12                     	;# 
   516     1E13                     	;# 
   517     1E14                     	;# 
   518     1E15                     	;# 
   519     1E16                     	;# 
   520     1E17                     	;# 
   521     1E18                     	;# 
   522     1E19                     	;# 
   523     1E1A                     	;# 
   524     1E1B                     	;# 
   525     1E1C                     	;# 
   526     1E1D                     	;# 
   527     1E1E                     	;# 
   528     1E1F                     	;# 
   529     1E20                     	;# 
   530     1E21                     	;# 
   531     1E22                     	;# 
   532     1E23                     	;# 
   533     1E24                     	;# 
   534     1E25                     	;# 
   535     1E26                     	;# 
   536     1E27                     	;# 
   537     1E28                     	;# 
   538     1E29                     	;# 
   539     1E2A                     	;# 
   540     1E2B                     	;# 
   541     1E2C                     	;# 
   542     1E2D                     	;# 
   543     1E2E                     	;# 
   544     1E2F                     	;# 
   545     1E30                     	;# 
   546     1E31                     	;# 
   547     1E32                     	;# 
   548     1E33                     	;# 
   549     1E34                     	;# 
   550     1E35                     	;# 
   551     1E36                     	;# 
   552     1E37                     	;# 
   553     1E8F                     	;# 
   554     1E90                     	;# 
   555     1E91                     	;# 
   556     1E92                     	;# 
   557     1E93                     	;# 
   558     1E9C                     	;# 
   559     1EA1                     	;# 
   560     1EA2                     	;# 
   561     1EB1                     	;# 
   562     1EBB                     	;# 
   563     1EBC                     	;# 
   564     1EBD                     	;# 
   565     1EBE                     	;# 
   566     1EC3                     	;# 
   567     1EC5                     	;# 
   568     1EC6                     	;# 
   569     1EC7                     	;# 
   570     1ECB                     	;# 
   571     1ECC                     	;# 
   572     1F10                     	;# 
   573     1F11                     	;# 
   574     1F12                     	;# 
   575     1F13                     	;# 
   576     1F14                     	;# 
   577     1F15                     	;# 
   578     1F38                     	;# 
   579     1F39                     	;# 
   580     1F3A                     	;# 
   581     1F3B                     	;# 
   582     1F3C                     	;# 
   583     1F3D                     	;# 
   584     1F3E                     	;# 
   585     1F3F                     	;# 
   586     1FE4                     	;# 
   587     1FE5                     	;# 
   588     1FE6                     	;# 
   589     1FE7                     	;# 
   590     1FE8                     	;# 
   591     1FE8                     	;# 
   592     1FE9                     	;# 
   593     1FEA                     	;# 
   594     1FEA                     	;# 
   595     1FEB                     	;# 
   596     1FED                     	;# 
   597     1FEE                     	;# 
   598     1FEF                     	;# 
   599     0000                     	;# 
   600     0001                     	;# 
   601     0002                     	;# 
   602     0003                     	;# 
   603     0004                     	;# 
   604     0005                     	;# 
   605     0006                     	;# 
   606     0007                     	;# 
   607     0008                     	;# 
   608     0009                     	;# 
   609     000A                     	;# 
   610     000B                     	;# 
   611     000C                     	;# 
   612     0012                     	;# 
   613     0018                     	;# 
   614     009B                     	;# 
   615     009B                     	;# 
   616     009C                     	;# 
   617     009D                     	;# 
   618     009E                     	;# 
   619     009F                     	;# 
   620     0119                     	;# 
   621     0119                     	;# 
   622     0119                     	;# 
   623     011A                     	;# 
   624     011A                     	;# 
   625     011A                     	;# 
   626     011B                     	;# 
   627     011B                     	;# 
   628     011B                     	;# 
   629     011B                     	;# 
   630     011B                     	;# 
   631     011C                     	;# 
   632     011C                     	;# 
   633     011C                     	;# 
   634     011D                     	;# 
   635     011D                     	;# 
   636     011D                     	;# 
   637     011E                     	;# 
   638     011E                     	;# 
   639     011E                     	;# 
   640     011F                     	;# 
   641     011F                     	;# 
   642     011F                     	;# 
   643     011F                     	;# 
   644     011F                     	;# 
   645     018C                     	;# 
   646     018D                     	;# 
   647     018E                     	;# 
   648     018F                     	;# 
   649     0190                     	;# 
   650     0191                     	;# 
   651     0192                     	;# 
   652     020C                     	;# 
   653     020C                     	;# 
   654     020D                     	;# 
   655     020E                     	;# 
   656     020F                     	;# 
   657     020F                     	;# 
   658     0210                     	;# 
   659     0210                     	;# 
   660     0211                     	;# 
   661     0211                     	;# 
   662     028C                     	;# 
   663     028C                     	;# 
   664     028D                     	;# 
   665     028D                     	;# 
   666     028E                     	;# 
   667     028F                     	;# 
   668     0290                     	;# 
   669     0291                     	;# 
   670     030C                     	;# 
   671     030C                     	;# 
   672     030D                     	;# 
   673     030E                     	;# 
   674     030F                     	;# 
   675     0310                     	;# 
   676     0310                     	;# 
   677     0311                     	;# 
   678     0312                     	;# 
   679     0313                     	;# 
   680     0314                     	;# 
   681     0314                     	;# 
   682     0315                     	;# 
   683     0316                     	;# 
   684     0318                     	;# 
   685     0318                     	;# 
   686     0319                     	;# 
   687     031A                     	;# 
   688     031C                     	;# 
   689     031C                     	;# 
   690     031D                     	;# 
   691     031E                     	;# 
   692     038C                     	;# 
   693     038C                     	;# 
   694     038D                     	;# 
   695     038E                     	;# 
   696     058C                     	;# 
   697     058C                     	;# 
   698     058D                     	;# 
   699     058E                     	;# 
   700     058F                     	;# 
   701     058F                     	;# 
   702     0590                     	;# 
   703     0591                     	;# 
   704     0592                     	;# 
   705     0593                     	;# 
   706     059C                     	;# 
   707     059C                     	;# 
   708     059D                     	;# 
   709     059D                     	;# 
   710     059E                     	;# 
   711     059F                     	;# 
   712     060C                     	;# 
   713     060D                     	;# 
   714     060E                     	;# 
   715     060F                     	;# 
   716     0610                     	;# 
   717     0611                     	;# 
   718     0612                     	;# 
   719     0613                     	;# 
   720     0614                     	;# 
   721     070C                     	;# 
   722     070D                     	;# 
   723     070E                     	;# 
   724     070F                     	;# 
   725     0710                     	;# 
   726     0711                     	;# 
   727     0712                     	;# 
   728     0713                     	;# 
   729     0716                     	;# 
   730     0717                     	;# 
   731     0718                     	;# 
   732     0719                     	;# 
   733     071A                     	;# 
   734     071B                     	;# 
   735     071C                     	;# 
   736     071D                     	;# 
   737     0796                     	;# 
   738     0797                     	;# 
   739     0798                     	;# 
   740     0799                     	;# 
   741     079A                     	;# 
   742     079B                     	;# 
   743     080C                     	;# 
   744     080D                     	;# 
   745     080E                     	;# 
   746     080F                     	;# 
   747     0810                     	;# 
   748     0811                     	;# 
   749     0812                     	;# 
   750     0813                     	;# 
   751     0814                     	;# 
   752     081A                     	;# 
   753     081A                     	;# 
   754     081B                     	;# 
   755     081C                     	;# 
   756     081C                     	;# 
   757     081D                     	;# 
   758     081E                     	;# 
   759     081F                     	;# 
   760     088C                     	;# 
   761     088D                     	;# 
   762     088E                     	;# 
   763     088F                     	;# 
   764     0890                     	;# 
   765     0891                     	;# 
   766     0892                     	;# 
   767     0893                     	;# 
   768     0895                     	;# 
   769     0896                     	;# 
   770     090C                     	;# 
   771     090E                     	;# 
   772     090F                     	;# 
   773     091F                     	;# 
   774     098F                     	;# 
   775     098F                     	;# 
   776     0990                     	;# 
   777     0991                     	;# 
   778     0992                     	;# 
   779     0993                     	;# 
   780     1E0F                     	;# 
   781     1E10                     	;# 
   782     1E11                     	;# 
   783     1E12                     	;# 
   784     1E13                     	;# 
   785     1E14                     	;# 
   786     1E15                     	;# 
   787     1E16                     	;# 
   788     1E17                     	;# 
   789     1E18                     	;# 
   790     1E19                     	;# 
   791     1E1A                     	;# 
   792     1E1B                     	;# 
   793     1E1C                     	;# 
   794     1E1D                     	;# 
   795     1E1E                     	;# 
   796     1E1F                     	;# 
   797     1E20                     	;# 
   798     1E21                     	;# 
   799     1E22                     	;# 
   800     1E23                     	;# 
   801     1E24                     	;# 
   802     1E25                     	;# 
   803     1E26                     	;# 
   804     1E27                     	;# 
   805     1E28                     	;# 
   806     1E29                     	;# 
   807     1E2A                     	;# 
   808     1E2B                     	;# 
   809     1E2C                     	;# 
   810     1E2D                     	;# 
   811     1E2E                     	;# 
   812     1E2F                     	;# 
   813     1E30                     	;# 
   814     1E31                     	;# 
   815     1E32                     	;# 
   816     1E33                     	;# 
   817     1E34                     	;# 
   818     1E35                     	;# 
   819     1E36                     	;# 
   820     1E37                     	;# 
   821     1E8F                     	;# 
   822     1E90                     	;# 
   823     1E91                     	;# 
   824     1E92                     	;# 
   825     1E93                     	;# 
   826     1E9C                     	;# 
   827     1EA1                     	;# 
   828     1EA2                     	;# 
   829     1EB1                     	;# 
   830     1EBB                     	;# 
   831     1EBC                     	;# 
   832     1EBD                     	;# 
   833     1EBE                     	;# 
   834     1EC3                     	;# 
   835     1EC5                     	;# 
   836     1EC6                     	;# 
   837     1EC7                     	;# 
   838     1ECB                     	;# 
   839     1ECC                     	;# 
   840     1F10                     	;# 
   841     1F11                     	;# 
   842     1F12                     	;# 
   843     1F13                     	;# 
   844     1F14                     	;# 
   845     1F15                     	;# 
   846     1F38                     	;# 
   847     1F39                     	;# 
   848     1F3A                     	;# 
   849     1F3B                     	;# 
   850     1F3C                     	;# 
   851     1F3D                     	;# 
   852     1F3E                     	;# 
   853     1F3F                     	;# 
   854     1FE4                     	;# 
   855     1FE5                     	;# 
   856     1FE6                     	;# 
   857     1FE7                     	;# 
   858     1FE8                     	;# 
   859     1FE8                     	;# 
   860     1FE9                     	;# 
   861     1FEA                     	;# 
   862     1FEA                     	;# 
   863     1FEB                     	;# 
   864     1FED                     	;# 
   865     1FEE                     	;# 
   866     1FEF                     	;# 
   867     0000                     	;# 
   868     0001                     	;# 
   869     0002                     	;# 
   870     0003                     	;# 
   871     0004                     	;# 
   872     0005                     	;# 
   873     0006                     	;# 
   874     0007                     	;# 
   875     0008                     	;# 
   876     0009                     	;# 
   877     000A                     	;# 
   878     000B                     	;# 
   879     000C                     	;# 
   880     0012                     	;# 
   881     0018                     	;# 
   882     009B                     	;# 
   883     009B                     	;# 
   884     009C                     	;# 
   885     009D                     	;# 
   886     009E                     	;# 
   887     009F                     	;# 
   888     0119                     	;# 
   889     0119                     	;# 
   890     0119                     	;# 
   891     011A                     	;# 
   892     011A                     	;# 
   893     011A                     	;# 
   894     011B                     	;# 
   895     011B                     	;# 
   896     011B                     	;# 
   897     011B                     	;# 
   898     011B                     	;# 
   899     011C                     	;# 
   900     011C                     	;# 
   901     011C                     	;# 
   902     011D                     	;# 
   903     011D                     	;# 
   904     011D                     	;# 
   905     011E                     	;# 
   906     011E                     	;# 
   907     011E                     	;# 
   908     011F                     	;# 
   909     011F                     	;# 
   910     011F                     	;# 
   911     011F                     	;# 
   912     011F                     	;# 
   913     018C                     	;# 
   914     018D                     	;# 
   915     018E                     	;# 
   916     018F                     	;# 
   917     0190                     	;# 
   918     0191                     	;# 
   919     0192                     	;# 
   920     020C                     	;# 
   921     020C                     	;# 
   922     020D                     	;# 
   923     020E                     	;# 
   924     020F                     	;# 
   925     020F                     	;# 
   926     0210                     	;# 
   927     0210                     	;# 
   928     0211                     	;# 
   929     0211                     	;# 
   930     028C                     	;# 
   931     028C                     	;# 
   932     028D                     	;# 
   933     028D                     	;# 
   934     028E                     	;# 
   935     028F                     	;# 
   936     0290                     	;# 
   937     0291                     	;# 
   938     030C                     	;# 
   939     030C                     	;# 
   940     030D                     	;# 
   941     030E                     	;# 
   942     030F                     	;# 
   943     0310                     	;# 
   944     0310                     	;# 
   945     0311                     	;# 
   946     0312                     	;# 
   947     0313                     	;# 
   948     0314                     	;# 
   949     0314                     	;# 
   950     0315                     	;# 
   951     0316                     	;# 
   952     0318                     	;# 
   953     0318                     	;# 
   954     0319                     	;# 
   955     031A                     	;# 
   956     031C                     	;# 
   957     031C                     	;# 
   958     031D                     	;# 
   959     031E                     	;# 
   960     038C                     	;# 
   961     038C                     	;# 
   962     038D                     	;# 
   963     038E                     	;# 
   964     058C                     	;# 
   965     058C                     	;# 
   966     058D                     	;# 
   967     058E                     	;# 
   968     058F                     	;# 
   969     058F                     	;# 
   970     0590                     	;# 
   971     0591                     	;# 
   972     0592                     	;# 
   973     0593                     	;# 
   974     059C                     	;# 
   975     059C                     	;# 
   976     059D                     	;# 
   977     059D                     	;# 
   978     059E                     	;# 
   979     059F                     	;# 
   980     060C                     	;# 
   981     060D                     	;# 
   982     060E                     	;# 
   983     060F                     	;# 
   984     0610                     	;# 
   985     0611                     	;# 
   986     0612                     	;# 
   987     0613                     	;# 
   988     0614                     	;# 
   989     070C                     	;# 
   990     070D                     	;# 
   991     070E                     	;# 
   992     070F                     	;# 
   993     0710                     	;# 
   994     0711                     	;# 
   995     0712                     	;# 
   996     0713                     	;# 
   997     0716                     	;# 
   998     0717                     	;# 
   999     0718                     	;# 
  1000     0719                     	;# 
  1001     071A                     	;# 
  1002     071B                     	;# 
  1003     071C                     	;# 
  1004     071D                     	;# 
  1005     0796                     	;# 
  1006     0797                     	;# 
  1007     0798                     	;# 
  1008     0799                     	;# 
  1009     079A                     	;# 
  1010     079B                     	;# 
  1011     080C                     	;# 
  1012     080D                     	;# 
  1013     080E                     	;# 
  1014     080F                     	;# 
  1015     0810                     	;# 
  1016     0811                     	;# 
  1017     0812                     	;# 
  1018     0813                     	;# 
  1019     0814                     	;# 
  1020     081A                     	;# 
  1021     081A                     	;# 
  1022     081B                     	;# 
  1023     081C                     	;# 
  1024     081C                     	;# 
  1025     081D                     	;# 
  1026     081E                     	;# 
  1027     081F                     	;# 
  1028     088C                     	;# 
  1029     088D                     	;# 
  1030     088E                     	;# 
  1031     088F                     	;# 
  1032     0890                     	;# 
  1033     0891                     	;# 
  1034     0892                     	;# 
  1035     0893                     	;# 
  1036     0895                     	;# 
  1037     0896                     	;# 
  1038     090C                     	;# 
  1039     090E                     	;# 
  1040     090F                     	;# 
  1041     091F                     	;# 
  1042     098F                     	;# 
  1043     098F                     	;# 
  1044     0990                     	;# 
  1045     0991                     	;# 
  1046     0992                     	;# 
  1047     0993                     	;# 
  1048     1E0F                     	;# 
  1049     1E10                     	;# 
  1050     1E11                     	;# 
  1051     1E12                     	;# 
  1052     1E13                     	;# 
  1053     1E14                     	;# 
  1054     1E15                     	;# 
  1055     1E16                     	;# 
  1056     1E17                     	;# 
  1057     1E18                     	;# 
  1058     1E19                     	;# 
  1059     1E1A                     	;# 
  1060     1E1B                     	;# 
  1061     1E1C                     	;# 
  1062     1E1D                     	;# 
  1063     1E1E                     	;# 
  1064     1E1F                     	;# 
  1065     1E20                     	;# 
  1066     1E21                     	;# 
  1067     1E22                     	;# 
  1068     1E23                     	;# 
  1069     1E24                     	;# 
  1070     1E25                     	;# 
  1071     1E26                     	;# 
  1072     1E27                     	;# 
  1073     1E28                     	;# 
  1074     1E29                     	;# 
  1075     1E2A                     	;# 
  1076     1E2B                     	;# 
  1077     1E2C                     	;# 
  1078     1E2D                     	;# 
  1079     1E2E                     	;# 
  1080     1E2F                     	;# 
  1081     1E30                     	;# 
  1082     1E31                     	;# 
  1083     1E32                     	;# 
  1084     1E33                     	;# 
  1085     1E34                     	;# 
  1086     1E35                     	;# 
  1087     1E36                     	;# 
  1088     1E37                     	;# 
  1089     1E8F                     	;# 
  1090     1E90                     	;# 
  1091     1E91                     	;# 
  1092     1E92                     	;# 
  1093     1E93                     	;# 
  1094     1E9C                     	;# 
  1095     1EA1                     	;# 
  1096     1EA2                     	;# 
  1097     1EB1                     	;# 
  1098     1EBB                     	;# 
  1099     1EBC                     	;# 
  1100     1EBD                     	;# 
  1101     1EBE                     	;# 
  1102     1EC3                     	;# 
  1103     1EC5                     	;# 
  1104     1EC6                     	;# 
  1105     1EC7                     	;# 
  1106     1ECB                     	;# 
  1107     1ECC                     	;# 
  1108     1F10                     	;# 
  1109     1F11                     	;# 
  1110     1F12                     	;# 
  1111     1F13                     	;# 
  1112     1F14                     	;# 
  1113     1F15                     	;# 
  1114     1F38                     	;# 
  1115     1F39                     	;# 
  1116     1F3A                     	;# 
  1117     1F3B                     	;# 
  1118     1F3C                     	;# 
  1119     1F3D                     	;# 
  1120     1F3E                     	;# 
  1121     1F3F                     	;# 
  1122     1FE4                     	;# 
  1123     1FE5                     	;# 
  1124     1FE6                     	;# 
  1125     1FE7                     	;# 
  1126     1FE8                     	;# 
  1127     1FE8                     	;# 
  1128     1FE9                     	;# 
  1129     1FEA                     	;# 
  1130     1FEA                     	;# 
  1131     1FEB                     	;# 
  1132     1FED                     	;# 
  1133     1FEE                     	;# 
  1134     1FEF                     	;# 
  1135     0018                     _LATAbits	set	24
  1136     000C                     _PORTAbits	set	12
  1137     0012                     _TRISA	set	18
  1138     0018                     _LATA	set	24
  1139     009D                     _ADCON0bits	set	157
  1140     009D                     _ADCON0	set	157
  1141     009C                     _ADRESH	set	156
  1142     009B                     _ADRESL	set	155
  1143     009F                     _ADACT	set	159
  1144     009E                     _ADCON1	set	158
  1145     079B                     _PMD5	set	1947
  1146     079A                     _PMD4	set	1946
  1147     0799                     _PMD3	set	1945
  1148     0798                     _PMD2	set	1944
  1149     0797                     _PMD1	set	1943
  1150     0796                     _PMD0	set	1942
  1151     0892                     _OSCTUNE	set	2194
  1152     0890                     _OSCSTAT	set	2192
  1153     0893                     _OSCFRQ	set	2195
  1154     0891                     _OSCEN	set	2193
  1155     088F                     _OSCCON3	set	2191
  1156     088D                     _OSCCON1	set	2189
  1157     1F3C                     _INLVLA	set	7996
  1158     1F3B                     _SLRCONA	set	7995
  1159     1F3A                     _ODCONA	set	7994
  1160     1F39                     _WPUA	set	7993
  1161     1F38                     _ANSELA	set	7992
  1162                           
  1163                           	psect	cinit
  1164     07F4                     start_initialization:	
  1165                           ; #config settings
  1166                           
  1167     07F4                     __initialization:
  1168                           
  1169                           ; Clear objects allocated to COMMON
  1170     07F4  01FC               	clrf	__pbssCOMMON& (0+127)
  1171     07F5  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  1172                           
  1173                           ; Clear objects allocated to BANK0
  1174     07F6  303C               	movlw	low __pbssBANK0
  1175     07F7  0084               	movwf	4
  1176     07F8  3000               	movlw	high __pbssBANK0
  1177     07F9  0085               	movwf	5
  1178     07FA  3011               	movlw	17
  1179     07FB  3185  25F9  3187   	fcall	clear_ram0
  1180     07FE                     end_of_initialization:	
  1181                           ;End of C runtime variable initialization code
  1182                           
  1183     07FE                     __end_of__initialization:
  1184     07FE  0140               	movlb	0
  1185     07FF  2F56               	ljmp	_main	;jump to C main() function
  1186                           
  1187                           	psect	bssCOMMON
  1188     007C                     __pbssCOMMON:
  1189     007C                     _ADC_InterruptHandler:
  1190     007C                     	ds	2
  1191                           
  1192                           	psect	bssBANK0
  1193     003C                     __pbssBANK0:
  1194     003C                     main@F6242:
  1195     003C                     	ds	17
  1196                           
  1197                           	psect	clrtext
  1198     05F9                     clear_ram0:	
  1199                           ;	Called with FSR0 containing the base address, and
  1200                           ;	WREG with the size to clear
  1201                           
  1202     05F9  0064               	clrwdt	;clear the watchdog before getting into this loop
  1203     05FA                     clrloop0:
  1204     05FA  0180               	clrf	0	;clear RAM location pointed to by FSR
  1205     05FB  3101               	addfsr 0,1
  1206     05FC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1207     05FD  2DFA               	goto	clrloop0	;have we reached the end yet?
  1208     05FE  3400               	retlw	0	;all done for this memory range, return
  1209                           
  1210                           	psect	cstackCOMMON
  1211     0070                     __pcstackCOMMON:
  1212     0070                     ?_PMD_Initialize:
  1213     0070                     ??_PMD_Initialize:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216     0070                     ?_OSCILLATOR_Initialize:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219     0070                     ??_OSCILLATOR_Initialize:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222     0070                     ?_ADC_Initialize:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225     0070                     ??_ADC_Initialize:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228     0070                     ?_PIN_MANAGER_Initialize:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231     0070                     ??_PIN_MANAGER_Initialize:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234     0070                     ?_SYSTEM_Initialize:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237     0070                     ??_SYSTEM_Initialize:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240     0070                     ?_battery_update:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243     0070                     ?_vehicle_running:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246     0070                     ??_vehicle_running:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249     0070                     ?_output_isOn:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252     0070                     ??_output_isOn:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255     0070                     ?_outputOff:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258     0070                     ??_outputOff:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261     0070                     ?_outputOn:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264     0070                     ??_outputOn:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267     0070                     ?_battery_isHealthy:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270     0070                     ??_battery_isHealthy:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273     0070                     ?_main:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276     0070                     ?_ADC_GetConversion:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279     0070                     ?_button_update:	
  1280                           ; 2 bytes @ 0x0
  1281                           
  1282     0070                     ?___lwdiv:	
  1283                           ; 2 bytes @ 0x0
  1284                           
  1285     0070                     output_isOn@theState:	
  1286                           ; 2 bytes @ 0x0
  1287                           
  1288     0070                     outputOff@theState:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291     0070                     outputOn@theState:	
  1292                           ; 1 bytes @ 0x0
  1293                           
  1294     0070                     ___lwdiv@divisor:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297                           
  1298                           ; 2 bytes @ 0x0
  1299     0070                     	ds	2
  1300     0072                     ??_ADC_GetConversion:
  1301     0072                     ??_button_update:	
  1302                           ; 1 bytes @ 0x2
  1303                           
  1304     0072                     ___lwdiv@dividend:	
  1305                           ; 1 bytes @ 0x2
  1306                           
  1307                           
  1308                           ; 2 bytes @ 0x2
  1309     0072                     	ds	1
  1310     0073                     ADC_GetConversion@channel:
  1311                           
  1312                           ; 1 bytes @ 0x3
  1313     0073                     	ds	1
  1314     0074                     ??___lwdiv:
  1315     0074                     vehicle_running@theState:	
  1316                           ; 1 bytes @ 0x4
  1317                           
  1318     0074                     battery_isHealthy@healthy:	
  1319                           ; 1 bytes @ 0x4
  1320                           
  1321                           
  1322                           ; 1 bytes @ 0x4
  1323     0074                     	ds	1
  1324     0075                     battery_isHealthy@theState:
  1325     0075                     button_update@pressed:	
  1326                           ; 1 bytes @ 0x5
  1327                           
  1328     0075                     ___lwdiv@quotient:	
  1329                           ; 2 bytes @ 0x5
  1330                           
  1331                           
  1332                           ; 2 bytes @ 0x5
  1333     0075                     	ds	2
  1334     0077                     button_update@theState:
  1335     0077                     ___lwdiv@counter:	
  1336                           ; 1 bytes @ 0x7
  1337                           
  1338                           
  1339                           ; 1 bytes @ 0x7
  1340     0077                     	ds	1
  1341     0078                     ??_battery_update:
  1342                           
  1343                           ; 1 bytes @ 0x8
  1344     0078                     	ds	4
  1345                           
  1346                           	psect	cstackBANK0
  1347     0020                     __pcstackBANK0:
  1348     0020                     battery_update@counts:
  1349                           
  1350                           ; 2 bytes @ 0x0
  1351     0020                     	ds	2
  1352     0022                     battery_update@volts:
  1353                           
  1354                           ; 2 bytes @ 0x2
  1355     0022                     	ds	2
  1356     0024                     battery_update@theState:
  1357                           
  1358                           ; 1 bytes @ 0x4
  1359     0024                     	ds	1
  1360     0025                     ??_main:
  1361                           
  1362                           ; 1 bytes @ 0x5
  1363     0025                     	ds	4
  1364     0029                     main@buttonValue:
  1365                           
  1366                           ; 2 bytes @ 0x9
  1367     0029                     	ds	2
  1368     002B                     main@theState:
  1369                           
  1370                           ; 17 bytes @ 0xB
  1371     002B                     	ds	17
  1372                           
  1373                           	psect	maintext
  1374     0756                     __pmaintext:	
  1375 ;;
  1376 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1377 ;;
  1378 ;; *************** function _main *****************
  1379 ;; Defined at:
  1380 ;;		line 141 in file "main.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  buttonValue     2    9[BANK0 ] int 
  1385 ;;  theState       17   11[BANK0 ] struct systemState
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : B3F/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1395 ;;      Params:         0       0       0       0
  1396 ;;      Locals:         0      19       0       0
  1397 ;;      Temps:          0       4       0       0
  1398 ;;      Totals:         0      23       0       0
  1399 ;;Total ram usage:       23 bytes
  1400 ;; Hardware stack levels required when called: 2
  1401 ;; This function calls:
  1402 ;;		_SYSTEM_Initialize
  1403 ;;		_battery_isHealthy
  1404 ;;		_battery_update
  1405 ;;		_button_update
  1406 ;;		_outputOff
  1407 ;;		_outputOn
  1408 ;;		_output_isOn
  1409 ;;		_vehicle_running
  1410 ;; This function is called by:
  1411 ;;		Startup code after reset
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415     0756                     _main:	
  1416                           ;psect for function _main
  1417                           
  1418     0756                     l974:	
  1419                           ;incstack = 0
  1420                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1421                           
  1422                           
  1423                           ;main.c: 143:     systemState_t theState = {0};
  1424     0756  303C               	movlw	low main@F6242
  1425     0757  0086               	movwf	6
  1426     0758  3000               	movlw	high main@F6242
  1427     0759  0087               	movwf	7
  1428     075A  302B               	movlw	low main@theState
  1429     075B  0084               	movwf	4
  1430     075C  3000               	movlw	high main@theState
  1431     075D  0085               	movwf	5
  1432     075E  3011               	movlw	17
  1433     075F  0140               	movlb	0	; select bank0
  1434     0760  00A5               	movwf	??_main
  1435     0761                     u390:
  1436     0761  0016               	moviw fsr1++
  1437     0762  001A               	movwi fsr0++
  1438     0763  0BA5               	decfsz	??_main,f
  1439     0764  2F61               	goto	u390
  1440     0765                     l976:
  1441                           
  1442                           ;main.c: 145:     SYSTEM_Initialize();
  1443     0765  3186  262F  3187   	fcall	_SYSTEM_Initialize
  1444     0768                     l978:
  1445     0768  0140               	movlb	0	; select bank0
  1446     0769  1498               	bsf	24,1	;volatile
  1447     076A                     l980:
  1448                           
  1449                           ;main.c: 150:         battery_update(&theState);
  1450     076A  302B               	movlw	(low (main@theState| 0))& (0+255)
  1451     076B  3186  267D  3187   	fcall	_battery_update
  1452     076E                     l982:
  1453                           
  1454                           ;main.c: 151:         int buttonValue = button_update(&theState);
  1455     076E  302B               	movlw	(low (main@theState| 0))& (0+255)
  1456     076F  3187  2717  3187   	fcall	_button_update
  1457     0772  0871               	movf	?_button_update+1,w
  1458     0773  0140               	movlb	0	; select bank0
  1459     0774  00AA               	movwf	main@buttonValue+1
  1460     0775  0870               	movf	?_button_update,w
  1461     0776  00A9               	movwf	main@buttonValue
  1462     0777                     l984:
  1463                           
  1464                           ;main.c: 153:         if( output_isOn(&theState) )
  1465     0777  302B               	movlw	(low (main@theState| 0))& (0+255)
  1466     0778  3186  2606  3187   	fcall	_output_isOn
  1467     077B  3A00               	xorlw	0
  1468     077C  1903               	skipnz
  1469     077D  2F7F               	goto	u401
  1470     077E  2F80               	goto	u400
  1471     077F                     u401:
  1472     077F  2FBB               	goto	l996
  1473     0780                     u400:
  1474     0780                     l986:
  1475                           
  1476                           ;main.c: 154:         {;main.c: 155:             if( buttonValue == 1 || !battery_isHeal
      +                          thy(&theState) )
  1477     0780  0140               	movlb	0	; select bank0
  1478     0781  0329               	decf	main@buttonValue,w
  1479     0782  042A               	iorwf	main@buttonValue+1,w
  1480     0783  1903               	btfsc	3,2
  1481     0784  2F86               	goto	u411
  1482     0785  2F87               	goto	u410
  1483     0786                     u411:
  1484     0786  2F90               	goto	l990
  1485     0787                     u410:
  1486     0787                     l988:
  1487     0787  302B               	movlw	(low (main@theState| 0))& (0+255)
  1488     0788  3186  26AB  3187   	fcall	_battery_isHealthy
  1489     078B  3A00               	xorlw	0
  1490     078C  1D03               	skipz
  1491     078D  2F8F               	goto	u421
  1492     078E  2F90               	goto	u420
  1493     078F                     u421:
  1494     078F  2F94               	goto	l147
  1495     0790                     u420:
  1496     0790                     l990:
  1497                           
  1498                           ;main.c: 156:             {;main.c: 157:                 outputOff(&theState);
  1499     0790  302B               	movlw	(low (main@theState| 0))& (0+255)
  1500     0791  3185  25FF  3187   	fcall	_outputOff
  1501     0794                     l147:	
  1502                           ;main.c: 158:             }
  1503                           
  1504                           
  1505                           ;main.c: 159:             if( !vehicle_running(&theState) )
  1506     0794  302B               	movlw	(low (main@theState| 0))& (0+255)
  1507     0795  3186  264A  3187   	fcall	_vehicle_running
  1508     0798  3A00               	xorlw	0
  1509     0799  1D03               	skipz
  1510     079A  2F9C               	goto	u431
  1511     079B  2F9D               	goto	u430
  1512     079C                     u431:
  1513     079C  2FE1               	goto	l1006
  1514     079D                     u430:
  1515     079D                     l992:
  1516                           
  1517                           ;main.c: 160:             {;main.c: 161:                 theState.onTimer --;
  1518     079D  3001               	movlw	1
  1519     079E  0140               	movlb	0	; select bank0
  1520     079F  00A5               	movwf	??_main
  1521     07A0  3000               	movlw	0
  1522     07A1  00A6               	movwf	??_main+1
  1523     07A2  3000               	movlw	0
  1524     07A3  00A7               	movwf	??_main+2
  1525     07A4  3000               	movlw	0
  1526     07A5  00A8               	movwf	??_main+3
  1527     07A6  0825               	movf	??_main,w
  1528     07A7  02B8               	subwf	main@theState+13,f
  1529     07A8  0826               	movf	??_main+1,w
  1530     07A9  3BB9               	subwfb	main@theState+14,f
  1531     07AA  0827               	movf	??_main+2,w
  1532     07AB  3BBA               	subwfb	main@theState+15,f
  1533     07AC  0828               	movf	??_main+3,w
  1534     07AD  3BBB               	subwfb	main@theState+16,f
  1535                           
  1536                           ;main.c: 162:                 if(theState.onTimer <= 0)
  1537     07AE  083B               	movf	main@theState+16,w
  1538     07AF  043A               	iorwf	main@theState+15,w
  1539     07B0  0439               	iorwf	main@theState+14,w
  1540     07B1  0438               	iorwf	main@theState+13,w
  1541     07B2  1D03               	skipz
  1542     07B3  2FB5               	goto	u441
  1543     07B4  2FB6               	goto	u440
  1544     07B5                     u441:
  1545     07B5  2FE1               	goto	l1006
  1546     07B6                     u440:
  1547     07B6                     l994:
  1548                           
  1549                           ;main.c: 163:                 {;main.c: 164:                     outputOff(&theState);
  1550     07B6  302B               	movlw	(low (main@theState| 0))& (0+255)
  1551     07B7  3185  25FF  3187   	fcall	_outputOff
  1552     07BA  2FE1               	goto	l1006
  1553     07BB                     l996:
  1554                           
  1555                           ;main.c: 169:         {;main.c: 170:             if( battery_isHealthy(&theState) && ( v
      +                          ehicle_running(&theState) || buttonValue == 1))
  1556     07BB  302B               	movlw	(low (main@theState| 0))& (0+255)
  1557     07BC  3186  26AB  3187   	fcall	_battery_isHealthy
  1558     07BF  3A00               	xorlw	0
  1559     07C0  1903               	skipnz
  1560     07C1  2FC3               	goto	u451
  1561     07C2  2FC4               	goto	u450
  1562     07C3                     u451:
  1563     07C3  2FE1               	goto	l1006
  1564     07C4                     u450:
  1565     07C4                     l998:
  1566     07C4  302B               	movlw	(low (main@theState| 0))& (0+255)
  1567     07C5  3186  264A  3187   	fcall	_vehicle_running
  1568     07C8  3A00               	xorlw	0
  1569     07C9  1D03               	skipz
  1570     07CA  2FCC               	goto	u461
  1571     07CB  2FCD               	goto	u460
  1572     07CC                     u461:
  1573     07CC  2FD4               	goto	l1002
  1574     07CD                     u460:
  1575     07CD                     l1000:
  1576     07CD  0140               	movlb	0	; select bank0
  1577     07CE  0329               	decf	main@buttonValue,w
  1578     07CF  042A               	iorwf	main@buttonValue+1,w
  1579     07D0  1D03               	btfss	3,2
  1580     07D1  2FD3               	goto	u471
  1581     07D2  2FD4               	goto	u470
  1582     07D3                     u471:
  1583     07D3  2FE1               	goto	l1006
  1584     07D4                     u470:
  1585     07D4                     l1002:
  1586                           
  1587                           ;main.c: 171:             {;main.c: 172:                 outputOn(&theState);
  1588     07D4  302B               	movlw	(low (main@theState| 0))& (0+255)
  1589     07D5  3186  261D  3187   	fcall	_outputOn
  1590     07D8                     l1004:
  1591                           
  1592                           ;main.c: 173:                 theState.onTimer = ( 10UL * 3750UL );
  1593     07D8  3000               	movlw	0
  1594     07D9  0140               	movlb	0	; select bank0
  1595     07DA  00BB               	movwf	main@theState+16
  1596     07DB  3000               	movlw	0
  1597     07DC  00BA               	movwf	main@theState+15
  1598     07DD  3092               	movlw	146
  1599     07DE  00B9               	movwf	main@theState+14
  1600     07DF  307C               	movlw	124
  1601     07E0  00B8               	movwf	main@theState+13
  1602     07E1                     l1006:
  1603                           
  1604                           ;main.c: 178:         if( output_isOn(&theState) )
  1605     07E1  302B               	movlw	(low (main@theState| 0))& (0+255)
  1606     07E2  3186  2606  3187   	fcall	_output_isOn
  1607     07E5  3A00               	xorlw	0
  1608     07E6  1903               	skipnz
  1609     07E7  2FE9               	goto	u481
  1610     07E8  2FEA               	goto	u480
  1611     07E9                     u481:
  1612     07E9  2FED               	goto	l160
  1613     07EA                     u480:
  1614     07EA                     l157:	
  1615                           ;main.c: 179:         {;main.c: 180:             do { LATAbits.LATA2 = 1; } while(0);
  1616                           
  1617     07EA  0140               	movlb	0	; select bank0
  1618     07EB  1518               	bsf	24,2	;volatile
  1619     07EC  2FEF               	goto	l162
  1620     07ED                     l160:	
  1621                           ;main.c: 184:         {;main.c: 185:             do { LATAbits.LATA2 = 0; } while(0);
  1622                           
  1623     07ED  0140               	movlb	0	; select bank0
  1624     07EE  1118               	bcf	24,2	;volatile
  1625     07EF                     l162:	
  1626                           ;main.c: 188:         do { LATAbits.LATA1 = 0; } while(0);
  1627                           
  1628     07EF  1098               	bcf	24,1	;volatile
  1629     07F0                     l163:
  1630     07F0  0064               	clrwdt	;# 
  1631     07F1  0063               	sleep	;# 
  1632     07F2  2F68               	goto	l978
  1633     07F3  2802               	ljmp	start
  1634     07F4                     __end_of_main:
  1635                           
  1636                           	psect	text1
  1637     064A                     __ptext1:	
  1638 ;; *************** function _vehicle_running *****************
  1639 ;; Defined at:
  1640 ;;		line 109 in file "main.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  theState        1    wreg     PTR struct systemState
  1643 ;;		 -> main@theState(17), 
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  theState        1    4[COMMON] PTR struct systemState
  1646 ;;		 -> main@theState(17), 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      _Bool 
  1649 ;; Registers used:
  1650 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1656 ;;      Params:         0       0       0       0
  1657 ;;      Locals:         1       0       0       0
  1658 ;;      Temps:          4       0       0       0
  1659 ;;      Totals:         5       0       0       0
  1660 ;;Total ram usage:        5 bytes
  1661 ;; Hardware stack levels used: 1
  1662 ;; This function calls:
  1663 ;;		Nothing
  1664 ;; This function is called by:
  1665 ;;		_main
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669     064A                     _vehicle_running:	
  1670                           ;psect for function _vehicle_running
  1671                           
  1672                           
  1673                           ;incstack = 0
  1674                           ; Regs used in _vehicle_running: [wreg+fsr1l+fsr1h+status,2+status,0]
  1675                           ;vehicle_running@theState stored from wreg
  1676     064A  00F4               	movwf	vehicle_running@theState
  1677     064B                     l950:
  1678                           
  1679                           ;main.c: 109: _Bool vehicle_running(systemState_t *theState);main.c: 110: {;main.c: 111:
      +                               return theState->batteryVoltage > 125UL;
  1680     064B  0874               	movf	vehicle_running@theState,w
  1681     064C  3E08               	addlw	8
  1682     064D  0086               	movwf	6
  1683     064E  0187               	clrf	7
  1684     064F  3F43               	moviw [3]fsr1
  1685     0650  1D03               	btfss	3,2
  1686     0651  2E5F               	goto	u351
  1687     0652  3F42               	moviw [2]fsr1
  1688     0653  1D03               	btfss	3,2
  1689     0654  2E5F               	goto	u351
  1690     0655  3F41               	moviw [1]fsr1
  1691     0656  1D03               	btfss	3,2
  1692     0657  2E5F               	goto	u351
  1693     0658  3F40               	moviw [0]fsr1
  1694     0659  00F0               	movwf	??_vehicle_running
  1695     065A  307E               	movlw	126
  1696     065B  0270               	subwf	??_vehicle_running,w
  1697     065C  1803               	btfsc	3,0
  1698     065D  2E5F               	goto	u351
  1699     065E  2E61               	goto	u350
  1700     065F                     u351:
  1701     065F  3001               	movlw	1
  1702     0660  2E62               	goto	u360
  1703     0661                     u350:
  1704     0661  3000               	movlw	0
  1705     0662                     u360:
  1706     0662                     l121:
  1707     0662  0008               	return
  1708     0663                     __end_of_vehicle_running:
  1709                           
  1710                           	psect	text2
  1711     0606                     __ptext2:	
  1712 ;; *************** function _output_isOn *****************
  1713 ;; Defined at:
  1714 ;;		line 114 in file "main.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  theState        1    wreg     PTR struct systemState
  1717 ;;		 -> main@theState(17), 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  theState        1    0[COMMON] PTR struct systemState
  1720 ;;		 -> main@theState(17), 
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      _Bool 
  1723 ;; Registers used:
  1724 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1730 ;;      Params:         0       0       0       0
  1731 ;;      Locals:         1       0       0       0
  1732 ;;      Temps:          0       0       0       0
  1733 ;;      Totals:         1       0       0       0
  1734 ;;Total ram usage:        1 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_main
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743     0606                     _output_isOn:	
  1744                           ;psect for function _output_isOn
  1745                           
  1746                           
  1747                           ;incstack = 0
  1748                           ; Regs used in _output_isOn: [wreg+fsr1l+fsr1h+status,2+status,0]
  1749                           ;output_isOn@theState stored from wreg
  1750     0606  00F0               	movwf	output_isOn@theState
  1751     0607                     l954:
  1752                           
  1753                           ;main.c: 114: _Bool output_isOn(systemState_t *theState);main.c: 115: {;main.c: 116:    
      +                           return theState->powerState;
  1754     0607  0870               	movf	output_isOn@theState,w
  1755     0608  3E0C               	addlw	12
  1756     0609  0086               	movwf	6
  1757     060A  0187               	clrf	7
  1758     060B  0801               	movf	1,w
  1759     060C                     l124:
  1760     060C  0008               	return
  1761     060D                     __end_of_output_isOn:
  1762                           
  1763                           	psect	text3
  1764     061D                     __ptext3:	
  1765 ;; *************** function _outputOn *****************
  1766 ;; Defined at:
  1767 ;;		line 124 in file "main.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  theState        1    wreg     PTR struct systemState
  1770 ;;		 -> main@theState(17), 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  theState        1    0[COMMON] PTR struct systemState
  1773 ;;		 -> main@theState(17), 
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1783 ;;      Params:         0       0       0       0
  1784 ;;      Locals:         1       0       0       0
  1785 ;;      Temps:          0       0       0       0
  1786 ;;      Totals:         1       0       0       0
  1787 ;;Total ram usage:        1 bytes
  1788 ;; Hardware stack levels used: 1
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796     061D                     _outputOn:	
  1797                           ;psect for function _outputOn
  1798                           
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in _outputOn: [wreg+fsr1l+fsr1h+status,2+status,0]
  1802                           ;outputOn@theState stored from wreg
  1803     061D  00F0               	movwf	outputOn@theState
  1804     061E                     l960:
  1805                           
  1806                           ;main.c: 124: void outputOn(systemState_t *theState);main.c: 125: {;main.c: 126:     the
      +                          State->powerState = 1;
  1807     061E  0870               	movf	outputOn@theState,w
  1808     061F  3E0C               	addlw	12
  1809     0620  0086               	movwf	6
  1810     0621  0187               	clrf	7
  1811     0622  0181               	clrf	1
  1812     0623  0A81               	incf	1,f
  1813     0624                     l130:
  1814     0624  0008               	return
  1815     0625                     __end_of_outputOn:
  1816                           
  1817                           	psect	text4
  1818     05FF                     __ptext4:	
  1819 ;; *************** function _outputOff *****************
  1820 ;; Defined at:
  1821 ;;		line 119 in file "main.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  theState        1    wreg     PTR struct systemState
  1824 ;;		 -> main@theState(17), 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  theState        1    0[COMMON] PTR struct systemState
  1827 ;;		 -> main@theState(17), 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1837 ;;      Params:         0       0       0       0
  1838 ;;      Locals:         1       0       0       0
  1839 ;;      Temps:          0       0       0       0
  1840 ;;      Totals:         1       0       0       0
  1841 ;;Total ram usage:        1 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_main
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850     05FF                     _outputOff:	
  1851                           ;psect for function _outputOff
  1852                           
  1853                           
  1854                           ;incstack = 0
  1855                           ; Regs used in _outputOff: [wreg+fsr1l+fsr1h+status,2+status,0]
  1856                           ;outputOff@theState stored from wreg
  1857     05FF  00F0               	movwf	outputOff@theState
  1858     0600                     l958:
  1859                           
  1860                           ;main.c: 119: void outputOff(systemState_t *theState);main.c: 120: {;main.c: 121:     th
      +                          eState->powerState = 0;
  1861     0600  0870               	movf	outputOff@theState,w
  1862     0601  3E0C               	addlw	12
  1863     0602  0086               	movwf	6
  1864     0603  0187               	clrf	7
  1865     0604  0181               	clrf	1
  1866     0605                     l127:
  1867     0605  0008               	return
  1868     0606                     __end_of_outputOff:
  1869                           
  1870                           	psect	text5
  1871     0717                     __ptext5:	
  1872 ;; *************** function _button_update *****************
  1873 ;; Defined at:
  1874 ;;		line 90 in file "main.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;  theState        1    wreg     PTR struct systemState
  1877 ;;		 -> main@theState(17), 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  theState        1    7[COMMON] PTR struct systemState
  1880 ;;		 -> main@theState(17), 
  1881 ;;  pressed         2    5[COMMON] int 
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  2    0[COMMON] int 
  1884 ;; Registers used:
  1885 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1891 ;;      Params:         2       0       0       0
  1892 ;;      Locals:         3       0       0       0
  1893 ;;      Temps:          3       0       0       0
  1894 ;;      Totals:         8       0       0       0
  1895 ;;Total ram usage:        8 bytes
  1896 ;; Hardware stack levels used: 1
  1897 ;; This function calls:
  1898 ;;		Nothing
  1899 ;; This function is called by:
  1900 ;;		_main
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904     0717                     _button_update:	
  1905                           ;psect for function _button_update
  1906                           
  1907                           
  1908                           ;incstack = 0
  1909                           ; Regs used in _button_update: [wreg+fsr1l+fsr1h+status,2+status,0]
  1910                           ;button_update@theState stored from wreg
  1911     0717  00F7               	movwf	button_update@theState
  1912     0718                     l934:
  1913                           
  1914                           ;main.c: 90: int button_update(systemState_t *theState);main.c: 91: {;main.c: 92:     in
      +                          t pressed = 0;
  1915     0718  01F5               	clrf	button_update@pressed
  1916     0719  01F6               	clrf	button_update@pressed+1
  1917     071A                     l936:
  1918                           
  1919                           ;main.c: 93:     if( PORTAbits.RA0 == 0 )
  1920     071A  0140               	movlb	0	; select bank0
  1921     071B  180C               	btfsc	12,0	;volatile
  1922     071C  2F1E               	goto	u331
  1923     071D  2F1F               	goto	u330
  1924     071E                     u331:
  1925     071E  2F29               	goto	l940
  1926     071F                     u330:
  1927     071F                     l938:
  1928                           
  1929                           ;main.c: 94:     {;main.c: 95:         theState->debounceCount ++;
  1930     071F  0877               	movf	button_update@theState,w
  1931     0720  3E04               	addlw	4
  1932     0721  0086               	movwf	6
  1933     0722  0187               	clrf	7
  1934     0723  3001               	movlw	1
  1935     0724  0781               	addwf	1,f
  1936     0725  3141               	addfsr 1,1
  1937     0726  1803               	skipnc
  1938     0727  0A81               	incf	1,f
  1939                           
  1940                           ;main.c: 96:     }
  1941     0728  2F49               	goto	l946
  1942     0729                     l940:
  1943                           
  1944                           ;main.c: 98:     {;main.c: 99:         if(theState->debounceCount > 1)
  1945     0729  0877               	movf	button_update@theState,w
  1946     072A  3E04               	addlw	4
  1947     072B  0086               	movwf	6
  1948     072C  0187               	clrf	7
  1949     072D  3F40               	moviw [0]fsr1
  1950     072E  00F2               	movwf	??_button_update
  1951     072F  3F41               	moviw [1]fsr1
  1952     0730  00F3               	movwf	??_button_update+1
  1953     0731  0873               	movf	??_button_update+1,w
  1954     0732  3A80               	xorlw	128
  1955     0733  00F4               	movwf	??_button_update+2
  1956     0734  3080               	movlw	128
  1957     0735  0274               	subwf	??_button_update+2,w
  1958     0736  1D03               	skipz
  1959     0737  2F3A               	goto	u345
  1960     0738  3002               	movlw	2
  1961     0739  0272               	subwf	??_button_update,w
  1962     073A                     u345:
  1963     073A  1C03               	skipc
  1964     073B  2F3D               	goto	u341
  1965     073C  2F3E               	goto	u340
  1966     073D                     u341:
  1967     073D  2F42               	goto	l944
  1968     073E                     u340:
  1969     073E                     l942:
  1970                           
  1971                           ;main.c: 100:         {;main.c: 101:             pressed = 1;
  1972     073E  3001               	movlw	1
  1973     073F  00F5               	movwf	button_update@pressed
  1974     0740  3000               	movlw	0
  1975     0741  00F6               	movwf	button_update@pressed+1
  1976     0742                     l944:
  1977                           
  1978                           ;main.c: 103:         theState->debounceCount = 0;
  1979     0742  0877               	movf	button_update@theState,w
  1980     0743  3E04               	addlw	4
  1981     0744  0086               	movwf	6
  1982     0745  0187               	clrf	7
  1983     0746  3000               	movlw	0
  1984     0747  3FC0               	movwi [0]fsr1
  1985     0748  3FC1               	movwi [1]fsr1
  1986     0749                     l946:
  1987                           
  1988                           ;main.c: 105:     theState->button_pv = pressed;
  1989     0749  0877               	movf	button_update@theState,w
  1990     074A  3E06               	addlw	6
  1991     074B  0086               	movwf	6
  1992     074C  0187               	clrf	7
  1993     074D  0875               	movf	button_update@pressed,w
  1994     074E  3FC0               	movwi [0]fsr1
  1995     074F  0876               	movf	button_update@pressed+1,w
  1996     0750  3FC1               	movwi [1]fsr1
  1997                           
  1998                           ;main.c: 106:     return pressed;
  1999     0751  0876               	movf	button_update@pressed+1,w
  2000     0752  00F1               	movwf	?_button_update+1
  2001     0753  0875               	movf	button_update@pressed,w
  2002     0754  00F0               	movwf	?_button_update
  2003     0755                     l118:
  2004     0755  0008               	return
  2005     0756                     __end_of_button_update:
  2006                           
  2007                           	psect	text6
  2008     067D                     __ptext6:	
  2009 ;; *************** function _battery_update *****************
  2010 ;; Defined at:
  2011 ;;		line 82 in file "main.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;  theState        1    wreg     PTR struct systemState
  2014 ;;		 -> main@theState(17), 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  theState        1    4[BANK0 ] PTR struct systemState
  2017 ;;		 -> main@theState(17), 
  2018 ;;  volts           2    2[BANK0 ] unsigned int 
  2019 ;;  counts          2    0[BANK0 ] unsigned int 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      void 
  2022 ;; Registers used:
  2023 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2029 ;;      Params:         0       0       0       0
  2030 ;;      Locals:         0       5       0       0
  2031 ;;      Temps:          4       0       0       0
  2032 ;;      Totals:         4       5       0       0
  2033 ;;Total ram usage:        9 bytes
  2034 ;; Hardware stack levels used: 1
  2035 ;; Hardware stack levels required when called: 1
  2036 ;; This function calls:
  2037 ;;		_ADC_GetConversion
  2038 ;;		___lwdiv
  2039 ;; This function is called by:
  2040 ;;		_main
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044     067D                     _battery_update:	
  2045                           ;psect for function _battery_update
  2046                           
  2047                           
  2048                           ;incstack = 0
  2049                           ; Regs used in _battery_update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2050                           ;battery_update@theState stored from wreg
  2051     067D  0140               	movlb	0	; select bank0
  2052     067E  00A4               	movwf	battery_update@theState
  2053     067F                     l930:
  2054                           
  2055                           ;main.c: 82: void battery_update(systemState_t *theState);main.c: 83: {;main.c: 84:     
      +                          unsigned int counts = ADC_GetConversion(VBAT);
  2056     067F  3005               	movlw	5
  2057     0680  3186  2663  3186   	fcall	_ADC_GetConversion
  2058     0683  0871               	movf	?_ADC_GetConversion+1,w
  2059     0684  0140               	movlb	0	; select bank0
  2060     0685  00A1               	movwf	battery_update@counts+1
  2061     0686  0870               	movf	?_ADC_GetConversion,w
  2062     0687  00A0               	movwf	battery_update@counts
  2063                           
  2064                           ;main.c: 85:     unsigned int volts = counts/401;
  2065     0688  3091               	movlw	145
  2066     0689  00F0               	movwf	___lwdiv@divisor
  2067     068A  3001               	movlw	1
  2068     068B  00F1               	movwf	___lwdiv@divisor+1
  2069     068C  0821               	movf	battery_update@counts+1,w
  2070     068D  00F3               	movwf	___lwdiv@dividend+1
  2071     068E  0820               	movf	battery_update@counts,w
  2072     068F  00F2               	movwf	___lwdiv@dividend
  2073     0690  3186  26DB  3186   	fcall	___lwdiv
  2074     0693  0871               	movf	?___lwdiv+1,w
  2075     0694  0140               	movlb	0	; select bank0
  2076     0695  00A3               	movwf	battery_update@volts+1
  2077     0696  0870               	movf	?___lwdiv,w
  2078     0697  00A2               	movwf	battery_update@volts
  2079     0698                     l932:
  2080                           
  2081                           ;main.c: 87:     theState->batteryVoltage = volts;
  2082     0698  0822               	movf	battery_update@volts,w
  2083     0699  00F8               	movwf	??_battery_update
  2084     069A  0823               	movf	battery_update@volts+1,w
  2085     069B  00F9               	movwf	??_battery_update+1
  2086     069C  01FA               	clrf	??_battery_update+2
  2087     069D  01FB               	clrf	??_battery_update+3
  2088     069E  0824               	movf	battery_update@theState,w
  2089     069F  3E08               	addlw	8
  2090     06A0  0086               	movwf	6
  2091     06A1  0187               	clrf	7
  2092     06A2  0878               	movf	??_battery_update,w
  2093     06A3  3FC0               	movwi [0]fsr1
  2094     06A4  0879               	movf	??_battery_update+1,w
  2095     06A5  3FC1               	movwi [1]fsr1
  2096     06A6  087A               	movf	??_battery_update+2,w
  2097     06A7  3FC2               	movwi [2]fsr1
  2098     06A8  087B               	movf	??_battery_update+3,w
  2099     06A9  3FC3               	movwi [3]fsr1
  2100     06AA                     l112:
  2101     06AA  0008               	return
  2102     06AB                     __end_of_battery_update:
  2103                           
  2104                           	psect	text7
  2105     06DB                     __ptext7:	
  2106 ;; *************** function ___lwdiv *****************
  2107 ;; Defined at:
  2108 ;;		line 5 in file "/Applications/microchip/xc8/v2.41/pic/sources/c99/common/lwdiv.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  divisor         2    0[COMMON] unsigned int 
  2111 ;;  dividend        2    2[COMMON] unsigned int 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  quotient        2    5[COMMON] unsigned int 
  2114 ;;  counter         1    7[COMMON] unsigned char 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  2    0[COMMON] unsigned int 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2124 ;;      Params:         4       0       0       0
  2125 ;;      Locals:         3       0       0       0
  2126 ;;      Temps:          1       0       0       0
  2127 ;;      Totals:         8       0       0       0
  2128 ;;Total ram usage:        8 bytes
  2129 ;; Hardware stack levels used: 1
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_battery_update
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137     06DB                     ___lwdiv:	
  2138                           ;psect for function ___lwdiv
  2139                           
  2140     06DB                     l896:	
  2141                           ;incstack = 0
  2142                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2143                           
  2144     06DB  01F5               	clrf	___lwdiv@quotient
  2145     06DC  01F6               	clrf	___lwdiv@quotient+1
  2146     06DD                     l898:
  2147     06DD  0870               	movf	___lwdiv@divisor,w
  2148     06DE  0471               	iorwf	___lwdiv@divisor+1,w
  2149     06DF  1903               	btfsc	3,2
  2150     06E0  2EE2               	goto	u261
  2151     06E1  2EE3               	goto	u260
  2152     06E2                     u261:
  2153     06E2  2F12               	goto	l918
  2154     06E3                     u260:
  2155     06E3                     l900:
  2156     06E3  01F7               	clrf	___lwdiv@counter
  2157     06E4  0AF7               	incf	___lwdiv@counter,f
  2158     06E5  2EEF               	goto	l906
  2159     06E6                     l902:
  2160     06E6  3001               	movlw	1
  2161     06E7                     u275:
  2162     06E7  35F0               	lslf	___lwdiv@divisor,f
  2163     06E8  0DF1               	rlf	___lwdiv@divisor+1,f
  2164     06E9  0B89               	decfsz	9,f
  2165     06EA  2EE7               	goto	u275
  2166     06EB                     l904:
  2167     06EB  3001               	movlw	1
  2168     06EC  00F4               	movwf	??___lwdiv
  2169     06ED  0874               	movf	??___lwdiv,w
  2170     06EE  07F7               	addwf	___lwdiv@counter,f
  2171     06EF                     l906:
  2172     06EF  1FF1               	btfss	___lwdiv@divisor+1,7
  2173     06F0  2EF2               	goto	u281
  2174     06F1  2EF3               	goto	u280
  2175     06F2                     u281:
  2176     06F2  2EE6               	goto	l902
  2177     06F3                     u280:
  2178     06F3                     l908:
  2179     06F3  3001               	movlw	1
  2180     06F4                     u295:
  2181     06F4  35F5               	lslf	___lwdiv@quotient,f
  2182     06F5  0DF6               	rlf	___lwdiv@quotient+1,f
  2183     06F6  0B89               	decfsz	9,f
  2184     06F7  2EF4               	goto	u295
  2185     06F8  0871               	movf	___lwdiv@divisor+1,w
  2186     06F9  0273               	subwf	___lwdiv@dividend+1,w
  2187     06FA  1D03               	skipz
  2188     06FB  2EFE               	goto	u305
  2189     06FC  0870               	movf	___lwdiv@divisor,w
  2190     06FD  0272               	subwf	___lwdiv@dividend,w
  2191     06FE                     u305:
  2192     06FE  1C03               	skipc
  2193     06FF  2F01               	goto	u301
  2194     0700  2F02               	goto	u300
  2195     0701                     u301:
  2196     0701  2F07               	goto	l914
  2197     0702                     u300:
  2198     0702                     l910:
  2199     0702  0870               	movf	___lwdiv@divisor,w
  2200     0703  02F2               	subwf	___lwdiv@dividend,f
  2201     0704  0871               	movf	___lwdiv@divisor+1,w
  2202     0705  3BF3               	subwfb	___lwdiv@dividend+1,f
  2203     0706                     l912:
  2204     0706  1475               	bsf	___lwdiv@quotient,0
  2205     0707                     l914:
  2206     0707  3001               	movlw	1
  2207     0708                     u315:
  2208     0708  36F1               	lsrf	___lwdiv@divisor+1,f
  2209     0709  0CF0               	rrf	___lwdiv@divisor,f
  2210     070A  0B89               	decfsz	9,f
  2211     070B  2F08               	goto	u315
  2212     070C                     l916:
  2213     070C  3001               	movlw	1
  2214     070D  02F7               	subwf	___lwdiv@counter,f
  2215     070E  1D03               	btfss	3,2
  2216     070F  2F11               	goto	u321
  2217     0710  2F12               	goto	u320
  2218     0711                     u321:
  2219     0711  2EF3               	goto	l908
  2220     0712                     u320:
  2221     0712                     l918:
  2222     0712  0876               	movf	___lwdiv@quotient+1,w
  2223     0713  00F1               	movwf	?___lwdiv+1
  2224     0714  0875               	movf	___lwdiv@quotient,w
  2225     0715  00F0               	movwf	?___lwdiv
  2226     0716                     l514:
  2227     0716  0008               	return
  2228     0717                     __end_of___lwdiv:
  2229                           
  2230                           	psect	text8
  2231     0663                     __ptext8:	
  2232 ;; *************** function _ADC_GetConversion *****************
  2233 ;; Defined at:
  2234 ;;		line 115 in file "mcc_generated_files/adc.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  channel         1    wreg     enum E5871
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  channel         1    3[COMMON] enum E5871
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  2    0[COMMON] unsigned short 
  2241 ;; Registers used:
  2242 ;;		wreg, status,2, status,0
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2248 ;;      Params:         2       0       0       0
  2249 ;;      Locals:         1       0       0       0
  2250 ;;      Temps:          1       0       0       0
  2251 ;;      Totals:         4       0       0       0
  2252 ;;Total ram usage:        4 bytes
  2253 ;; Hardware stack levels used: 1
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		_battery_update
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261     0663                     _ADC_GetConversion:	
  2262                           ;psect for function _ADC_GetConversion
  2263                           
  2264                           
  2265                           ;incstack = 0
  2266                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  2267                           ;ADC_GetConversion@channel stored from wreg
  2268     0663  00F3               	movwf	ADC_GetConversion@channel
  2269     0664                     l862:
  2270                           
  2271                           ;mcc_generated_files/adc.c: 115: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 116: {;mcc_generated_files/adc.c: 118:     ADCON0bits.CHS = ch
      +                          annel;
  2272     0664  0873               	movf	ADC_GetConversion@channel,w
  2273     0665  00F2               	movwf	??_ADC_GetConversion
  2274     0666  0DF2               	rlf	??_ADC_GetConversion,f
  2275     0667  0DF2               	rlf	??_ADC_GetConversion,f
  2276     0668  0141               	movlb	1	; select bank1
  2277     0669  081D               	movf	29,w	;volatile
  2278     066A  0672               	xorwf	??_ADC_GetConversion,w
  2279     066B  3903               	andlw	-253
  2280     066C  0672               	xorwf	??_ADC_GetConversion,w
  2281     066D  009D               	movwf	29	;volatile
  2282     066E                     l864:
  2283                           
  2284                           ;mcc_generated_files/adc.c: 121:     ADCON0bits.ADON = 1;
  2285     066E  141D               	bsf	29,0	;volatile
  2286     066F                     l866:
  2287                           
  2288                           ;mcc_generated_files/adc.c: 124:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  2289     066F  3200               	nop2	;2 cycle nop
  2290     0670  3200               	nop2	;2 cycle nop
  2291     0671  0000               	nop
  2292     0672                     l868:
  2293                           
  2294                           ;mcc_generated_files/adc.c: 127:     ADCON0bits.GOnDONE = 1;
  2295     0672  0141               	movlb	1	; select bank1
  2296     0673  149D               	bsf	29,1	;volatile
  2297     0674                     l34:	
  2298                           ;mcc_generated_files/adc.c: 131:     {;mcc_generated_files/adc.c: 132:     }
  2299                           
  2300                           
  2301                           ;mcc_generated_files/adc.c: 130:     while (ADCON0bits.GOnDONE)
  2302     0674  189D               	btfsc	29,1	;volatile
  2303     0675  2E77               	goto	u251
  2304     0676  2E78               	goto	u250
  2305     0677                     u251:
  2306     0677  2E74               	goto	l34
  2307     0678                     u250:
  2308     0678                     l870:
  2309                           
  2310                           ;mcc_generated_files/adc.c: 135:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  2311     0678  081C               	movf	28,w	;volatile
  2312     0679  00F1               	movwf	?_ADC_GetConversion+1
  2313     067A  081B               	movf	27,w	;volatile
  2314     067B  00F0               	movwf	?_ADC_GetConversion
  2315     067C                     l37:
  2316     067C  0008               	return
  2317     067D                     __end_of_ADC_GetConversion:
  2318                           
  2319                           	psect	text9
  2320     06AB                     __ptext9:	
  2321 ;; *************** function _battery_isHealthy *****************
  2322 ;; Defined at:
  2323 ;;		line 129 in file "main.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  theState        1    wreg     PTR struct systemState
  2326 ;;		 -> main@theState(17), 
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;  theState        1    5[COMMON] PTR struct systemState
  2329 ;;		 -> main@theState(17), 
  2330 ;;  healthy         1    4[COMMON] _Bool 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      _Bool 
  2333 ;; Registers used:
  2334 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2340 ;;      Params:         0       0       0       0
  2341 ;;      Locals:         2       0       0       0
  2342 ;;      Temps:          4       0       0       0
  2343 ;;      Totals:         6       0       0       0
  2344 ;;Total ram usage:        6 bytes
  2345 ;; Hardware stack levels used: 1
  2346 ;; This function calls:
  2347 ;;		Nothing
  2348 ;; This function is called by:
  2349 ;;		_main
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353     06AB                     _battery_isHealthy:	
  2354                           ;psect for function _battery_isHealthy
  2355                           
  2356                           
  2357                           ;incstack = 0
  2358                           ; Regs used in _battery_isHealthy: [wreg+fsr1l+fsr1h+status,2+status,0]
  2359                           ;battery_isHealthy@theState stored from wreg
  2360     06AB  00F5               	movwf	battery_isHealthy@theState
  2361     06AC                     l962:
  2362                           
  2363                           ;main.c: 129: _Bool battery_isHealthy(systemState_t *theState);main.c: 130: {;main.c: 13
      +                          1:     _Bool healthy = 1;
  2364     06AC  01F4               	clrf	battery_isHealthy@healthy
  2365     06AD  0AF4               	incf	battery_isHealthy@healthy,f
  2366     06AE                     l964:
  2367                           
  2368                           ;main.c: 132:     if( theState->batteryVoltage < 100UL ||
  2369     06AE  0875               	movf	battery_isHealthy@theState,w
  2370     06AF  3E08               	addlw	8
  2371     06B0  0086               	movwf	6
  2372     06B1  0187               	clrf	7
  2373     06B2  3F43               	moviw [3]fsr1
  2374     06B3  1D03               	btfss	3,2
  2375     06B4  2EC3               	goto	u370
  2376     06B5  3F42               	moviw [2]fsr1
  2377     06B6  1D03               	btfss	3,2
  2378     06B7  2EC3               	goto	u370
  2379     06B8  3F41               	moviw [1]fsr1
  2380     06B9  1D03               	btfss	3,2
  2381     06BA  2EC3               	goto	u370
  2382     06BB  3F40               	moviw [0]fsr1
  2383     06BC  00F0               	movwf	??_battery_isHealthy
  2384     06BD  3064               	movlw	100
  2385     06BE  0270               	subwf	??_battery_isHealthy,w
  2386     06BF  1C03               	btfss	3,0
  2387     06C0  2EC2               	goto	u371
  2388     06C1  2EC3               	goto	u370
  2389     06C2                     u371:
  2390     06C2  2ED8               	goto	l968
  2391     06C3                     u370:
  2392     06C3                     l966:
  2393     06C3  0875               	movf	battery_isHealthy@theState,w
  2394     06C4  3E08               	addlw	8
  2395     06C5  0086               	movwf	6
  2396     06C6  0187               	clrf	7
  2397     06C7  3F43               	moviw [3]fsr1
  2398     06C8  1D03               	btfss	3,2
  2399     06C9  2ED8               	goto	u380
  2400     06CA  3F42               	moviw [2]fsr1
  2401     06CB  1D03               	btfss	3,2
  2402     06CC  2ED8               	goto	u380
  2403     06CD  3F41               	moviw [1]fsr1
  2404     06CE  1D03               	btfss	3,2
  2405     06CF  2ED8               	goto	u380
  2406     06D0  3F40               	moviw [0]fsr1
  2407     06D1  00F0               	movwf	??_battery_isHealthy
  2408     06D2  3097               	movlw	151
  2409     06D3  0270               	subwf	??_battery_isHealthy,w
  2410     06D4  1C03               	btfss	3,0
  2411     06D5  2ED7               	goto	u381
  2412     06D6  2ED8               	goto	u380
  2413     06D7                     u381:
  2414     06D7  2ED9               	goto	l970
  2415     06D8                     u380:
  2416     06D8                     l968:
  2417                           
  2418                           ;main.c: 134:     {;main.c: 135:         healthy = 0;
  2419     06D8  01F4               	clrf	battery_isHealthy@healthy
  2420     06D9                     l970:
  2421                           
  2422                           ;main.c: 137:     return healthy;
  2423     06D9  0874               	movf	battery_isHealthy@healthy,w
  2424     06DA                     l136:
  2425     06DA  0008               	return
  2426     06DB                     __end_of_battery_isHealthy:
  2427                           
  2428                           	psect	text10
  2429     062F                     __ptext10:	
  2430 ;; *************** function _SYSTEM_Initialize *****************
  2431 ;; Defined at:
  2432 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;		None
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;		None
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      void 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0, pclath, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2446 ;;      Params:         0       0       0       0
  2447 ;;      Locals:         0       0       0       0
  2448 ;;      Temps:          0       0       0       0
  2449 ;;      Totals:         0       0       0       0
  2450 ;;Total ram usage:        0 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; Hardware stack levels required when called: 1
  2453 ;; This function calls:
  2454 ;;		_ADC_Initialize
  2455 ;;		_OSCILLATOR_Initialize
  2456 ;;		_PIN_MANAGER_Initialize
  2457 ;;		_PMD_Initialize
  2458 ;; This function is called by:
  2459 ;;		_main
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463     062F                     _SYSTEM_Initialize:	
  2464                           ;psect for function _SYSTEM_Initialize
  2465                           
  2466     062F                     l922:	
  2467                           ;incstack = 0
  2468                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2469                           
  2470                           
  2471                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  2472     062F  3186  2615  3186   	fcall	_PMD_Initialize
  2473     0632                     l924:
  2474                           
  2475                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2476     0632  3186  263C  3186   	fcall	_PIN_MANAGER_Initialize
  2477     0635                     l926:
  2478                           
  2479                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2480     0635  3186  2625  3186   	fcall	_OSCILLATOR_Initialize
  2481     0638                     l928:
  2482                           
  2483                           ;mcc_generated_files/mcc.c: 55:     ADC_Initialize();
  2484     0638  3186  260D  3186   	fcall	_ADC_Initialize
  2485     063B                     l95:
  2486     063B  0008               	return
  2487     063C                     __end_of_SYSTEM_Initialize:
  2488                           
  2489                           	psect	text11
  2490     0615                     __ptext11:	
  2491 ;; *************** function _PMD_Initialize *****************
  2492 ;; Defined at:
  2493 ;;		line 74 in file "mcc_generated_files/mcc.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		status,2
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2507 ;;      Params:         0       0       0       0
  2508 ;;      Locals:         0       0       0       0
  2509 ;;      Temps:          0       0       0       0
  2510 ;;      Totals:         0       0       0       0
  2511 ;;Total ram usage:        0 bytes
  2512 ;; Hardware stack levels used: 1
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		_SYSTEM_Initialize
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520     0615                     _PMD_Initialize:	
  2521                           ;psect for function _PMD_Initialize
  2522                           
  2523     0615                     l884:	
  2524                           ;incstack = 0
  2525                           ; Regs used in _PMD_Initialize: [status,2]
  2526                           
  2527                           
  2528                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  2529     0615  014F               	movlb	15	; select bank15
  2530     0616  0196               	clrf	22	;volatile
  2531                           
  2532                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  2533     0617  0197               	clrf	23	;volatile
  2534                           
  2535                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  2536     0618  0198               	clrf	24	;volatile
  2537                           
  2538                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  2539     0619  0199               	clrf	25	;volatile
  2540                           
  2541                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  2542     061A  019A               	clrf	26	;volatile
  2543                           
  2544                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  2545     061B  019B               	clrf	27	;volatile
  2546     061C                     l101:
  2547     061C  0008               	return
  2548     061D                     __end_of_PMD_Initialize:
  2549                           
  2550                           	psect	text12
  2551     063C                     __ptext12:	
  2552 ;; *************** function _PIN_MANAGER_Initialize *****************
  2553 ;; Defined at:
  2554 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;		None
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;		None
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2568 ;;      Params:         0       0       0       0
  2569 ;;      Locals:         0       0       0       0
  2570 ;;      Temps:          0       0       0       0
  2571 ;;      Totals:         0       0       0       0
  2572 ;;Total ram usage:        0 bytes
  2573 ;; Hardware stack levels used: 1
  2574 ;; This function calls:
  2575 ;;		Nothing
  2576 ;; This function is called by:
  2577 ;;		_SYSTEM_Initialize
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581     063C                     _PIN_MANAGER_Initialize:	
  2582                           ;psect for function _PIN_MANAGER_Initialize
  2583                           
  2584     063C                     l874:	
  2585                           ;incstack = 0
  2586                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2587                           
  2588                           
  2589                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2590     063C  0140               	movlb	0	; select bank0
  2591     063D  0198               	clrf	24	;volatile
  2592     063E                     l876:
  2593                           
  2594                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x31;
  2595     063E  3031               	movlw	49
  2596     063F  0092               	movwf	18	;volatile
  2597     0640                     l878:
  2598                           
  2599                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x30;
  2600     0640  3030               	movlw	48
  2601     0641  017E               	movlb	62	; select bank62
  2602     0642  00B8               	movwf	56	;volatile
  2603                           
  2604                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  2605     0643  01B9               	clrf	57	;volatile
  2606                           
  2607                           ;mcc_generated_files/pin_manager.c: 80:     ODCONA = 0x00;
  2608     0644  01BA               	clrf	58	;volatile
  2609     0645                     l880:
  2610                           
  2611                           ;mcc_generated_files/pin_manager.c: 85:     SLRCONA = 0x37;
  2612     0645  3037               	movlw	55
  2613     0646  00BB               	movwf	59	;volatile
  2614     0647                     l882:
  2615                           
  2616                           ;mcc_generated_files/pin_manager.c: 90:     INLVLA = 0x3F;
  2617     0647  303F               	movlw	63
  2618     0648  00BC               	movwf	60	;volatile
  2619     0649                     l57:
  2620     0649  0008               	return
  2621     064A                     __end_of_PIN_MANAGER_Initialize:
  2622                           
  2623                           	psect	text13
  2624     0625                     __ptext13:	
  2625 ;; *************** function _OSCILLATOR_Initialize *****************
  2626 ;; Defined at:
  2627 ;;		line 58 in file "mcc_generated_files/mcc.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;		None
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;		None
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      void 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2641 ;;      Params:         0       0       0       0
  2642 ;;      Locals:         0       0       0       0
  2643 ;;      Temps:          0       0       0       0
  2644 ;;      Totals:         0       0       0       0
  2645 ;;Total ram usage:        0 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		_SYSTEM_Initialize
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654     0625                     _OSCILLATOR_Initialize:	
  2655                           ;psect for function _OSCILLATOR_Initialize
  2656                           
  2657     0625                     l886:	
  2658                           ;incstack = 0
  2659                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2660                           
  2661                           
  2662                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x60;
  2663     0625  3060               	movlw	96
  2664     0626  0151               	movlb	17	; select bank17
  2665     0627  008D               	movwf	13	;volatile
  2666     0628                     l888:
  2667                           
  2668                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
  2669     0628  018F               	clrf	15	;volatile
  2670     0629                     l890:
  2671                           
  2672                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
  2673     0629  0191               	clrf	17	;volatile
  2674                           
  2675                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x02;
  2676     062A  3002               	movlw	2
  2677     062B  0093               	movwf	19	;volatile
  2678     062C                     l892:
  2679                           
  2680                           ;mcc_generated_files/mcc.c: 69:     OSCSTAT = 0x00;
  2681     062C  0190               	clrf	16	;volatile
  2682     062D                     l894:
  2683                           
  2684                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  2685     062D  0192               	clrf	18	;volatile
  2686     062E                     l98:
  2687     062E  0008               	return
  2688     062F                     __end_of_OSCILLATOR_Initialize:
  2689                           
  2690                           	psect	text14
  2691     060D                     __ptext14:	
  2692 ;; *************** function _ADC_Initialize *****************
  2693 ;; Defined at:
  2694 ;;		line 67 in file "mcc_generated_files/adc.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2708 ;;      Params:         0       0       0       0
  2709 ;;      Locals:         0       0       0       0
  2710 ;;      Temps:          0       0       0       0
  2711 ;;      Totals:         0       0       0       0
  2712 ;;Total ram usage:        0 bytes
  2713 ;; Hardware stack levels used: 1
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_SYSTEM_Initialize
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721     060D                     _ADC_Initialize:	
  2722                           ;psect for function _ADC_Initialize
  2723                           
  2724     060D                     l858:	
  2725                           ;incstack = 0
  2726                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2727                           
  2728                           
  2729                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x00;
  2730     060D  0141               	movlb	1	; select bank1
  2731     060E  019E               	clrf	30	;volatile
  2732                           
  2733                           ;mcc_generated_files/adc.c: 75:     ADACT = 0x00;
  2734     060F  019F               	clrf	31	;volatile
  2735                           
  2736                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  2737     0610  019B               	clrf	27	;volatile
  2738                           
  2739                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  2740     0611  019C               	clrf	28	;volatile
  2741     0612                     l860:
  2742                           
  2743                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  2744     0612  3001               	movlw	1
  2745     0613  009D               	movwf	29	;volatile
  2746     0614                     l19:
  2747     0614  0008               	return
  2748     0615                     __end_of_ADC_Initialize:
  2749     007E                     btemp	set	126	;btemp
  2750     007E                     wtemp0	set	126
  2751                           
  2752                           	psect	idloc
  2753                           
  2754                           ;Config register IDLOC0 @ 0x8000
  2755                           ;	unspecified, using default values
  2756     8000                     	org	32768
  2757     8000  3FFF               	dw	16383
  2758                           
  2759                           ;Config register IDLOC1 @ 0x8001
  2760                           ;	unspecified, using default values
  2761     8001                     	org	32769
  2762     8001  3FFF               	dw	16383
  2763                           
  2764                           ;Config register IDLOC2 @ 0x8002
  2765                           ;	unspecified, using default values
  2766     8002                     	org	32770
  2767     8002  3FFF               	dw	16383
  2768                           
  2769                           ;Config register IDLOC3 @ 0x8003
  2770                           ;	unspecified, using default values
  2771     8003                     	org	32771
  2772     8003  3FFF               	dw	16383
  2773                           
  2774                           	psect	config
  2775                           
  2776                           ;Config register CONFIG1 @ 0x8007
  2777                           ;	External Oscillator mode selection bits
  2778                           ;	FEXTOSC = OFF, Oscillator not enabled
  2779                           ;	Power-up default value for COSC bits
  2780                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  2781                           ;	Clock Out Enable bit
  2782                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  2783                           ;	Clock Switch Enable bit
  2784                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2785                           ;	Fail-Safe Clock Monitor Enable bit
  2786                           ;	FCMEN = ON, FSCM timer enabled
  2787     8007                     	org	32775
  2788     8007  3FEC               	dw	16364
  2789                           
  2790                           ;Config register CONFIG2 @ 0x8008
  2791                           ;	Master Clear Enable bit
  2792                           ;	MCLRE = ON, MCLR pin is Master Clear function
  2793                           ;	Power-up Timer Enable bit
  2794                           ;	PWRTE = OFF, PWRT disabled
  2795                           ;	Low-Power BOR enable bit
  2796                           ;	LPBOREN = OFF, ULPBOR disabled
  2797                           ;	Brown-out reset enable bits
  2798                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  2799                           ;	Brown-out Reset Voltage Selection
  2800                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  2801                           ;	Zero-cross detect disable
  2802                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  2803                           ;	Peripheral Pin Select one-way control
  2804                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  2805                           ;	Stack Overflow/Underflow Reset Enable bit
  2806                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  2807     8008                     	org	32776
  2808     8008  3FFF               	dw	16383
  2809                           
  2810                           ;Config register CONFIG3 @ 0x8009
  2811                           ;	WDT Period Select bits
  2812                           ;	WDTCPS = WDTCPS_4, Divider ratio 1:512
  2813                           ;	WDT operating mode
  2814                           ;	WDTE = ON, WDT enabled regardless of sleep; SWDTEN ignored
  2815                           ;	WDT Window Select bits
  2816                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2817                           ;	WDT input clock selector
  2818                           ;	WDTCCS = LFINTOSC, WDT reference clock is the 31.0kHz LFINTOSC output
  2819     8009                     	org	32777
  2820     8009  07E4               	dw	2020
  2821                           
  2822                           ;Config register CONFIG4 @ 0x800A
  2823                           ;	Boot Block Size Selection bits
  2824                           ;	BBSIZE = BB512, 512 words boot block size
  2825                           ;	Boot Block Enable bit
  2826                           ;	BBEN = OFF, Boot Block disabled
  2827                           ;	SAF Enable bit
  2828                           ;	SAFEN = OFF, SAF disabled
  2829                           ;	Application Block Write Protection bit
  2830                           ;	WRTAPP = OFF, Application Block not write protected
  2831                           ;	Boot Block Write Protection bit
  2832                           ;	WRTB = OFF, Boot Block not write protected
  2833                           ;	Configuration Register Write Protection bit
  2834                           ;	WRTC = OFF, Configuration Register not write protected
  2835                           ;	Storage Area Flash Write Protection bit
  2836                           ;	WRTSAF = OFF, SAF not write protected
  2837                           ;	Low Voltage Programming Enable bit
  2838                           ;	LVP = OFF, High Voltage on MCLR/Vpp must be used for programming
  2839     800A                     	org	32778
  2840     800A  1FFF               	dw	8191
  2841                           
  2842                           ;Config register CONFIG5 @ 0x800B
  2843                           ;	UserNVM Program memory code protection bit
  2844                           ;	CP = OFF, UserNVM code protection disabled
  2845     800B                     	org	32779
  2846     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         19
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     28      45
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    battery_isHealthy@theState	PTR struct systemState size(1) Largest target is 17
		 -> main@theState(BANK0[17]), 

    outputOn@theState	PTR struct systemState size(1) Largest target is 17
		 -> main@theState(BANK0[17]), 

    outputOff@theState	PTR struct systemState size(1) Largest target is 17
		 -> main@theState(BANK0[17]), 

    output_isOn@theState	PTR struct systemState size(1) Largest target is 17
		 -> main@theState(BANK0[17]), 

    vehicle_running@theState	PTR struct systemState size(1) Largest target is 17
		 -> main@theState(BANK0[17]), 

    button_update@theState	PTR struct systemState size(1) Largest target is 17
		 -> main@theState(BANK0[17]), 

    battery_update@theState	PTR struct systemState size(1) Largest target is 17
		 -> main@theState(BANK0[17]), 


Critical Paths under _main in COMMON

    _main->_battery_update
    _battery_update->___lwdiv

Critical Paths under _main in BANK0

    _main->_battery_update

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0    1434
                                              5 BANK0     23    23      0
                  _SYSTEM_Initialize
                  _battery_isHealthy
                     _battery_update
                      _button_update
                          _outputOff
                           _outputOn
                        _output_isOn
                    _vehicle_running
 ---------------------------------------------------------------------------------
 (1) _vehicle_running                                      5     5      0      88
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _output_isOn                                          1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _outputOn                                             1     1      0      55
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _outputOff                                            1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _button_update                                        8     6      2     167
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _battery_update                                       9     9      0     437
                                              8 COMMON     4     4      0
                                              0 BANK0      5     5      0
                  _ADC_GetConversion
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _battery_isHealthy                                    6     6      0     134
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _battery_isHealthy
   _battery_update
     _ADC_GetConversion
     ___lwdiv
   _button_update
   _outputOff
   _outputOn
   _output_isOn
   _vehicle_running

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      2D       5       56.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      3B      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      3B      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue May 23 21:22:55 2023

                            l34 0674                              l19 0614                              l37 067C  
                            l57 0649                              l95 063B                              l98 062E  
                           l101 061C                             l112 06AA                             l121 0662  
                           l130 0624                             l124 060C                             l118 0755  
                           l127 0605                             l136 06DA                             l160 07ED  
                           l162 07EF                             l163 07F0                             l147 0794  
                           l157 07EA                             l514 0716                             l900 06E3  
                           l910 0702                             l902 06E6                             l912 0706  
                           l904 06EB                             l922 062F                             l914 0707  
                           l906 06EF                             l930 067F                             l860 0612  
                           l924 0632                             l916 070C                             l908 06F3  
                           l932 0698                             l940 0729                             l926 0635  
                           l870 0678                             l862 0664                             l918 0712  
                           l942 073E                             l934 0718                             l950 064B  
                           l880 0645                             l928 0638                             l864 066E  
                           l944 0742                             l936 071A                             l960 061E  
                           l858 060D                             l890 0629                             l882 0647  
                           l874 063C                             l970 06D9                             l962 06AC  
                           l866 066F                             l946 0749                             l938 071F  
                           l954 0607                             l892 062C                             l876 063E  
                           l884 0615                             l964 06AE                             l868 0672  
                           l980 076A                             l894 062D                             l886 0625  
                           l878 0640                             l966 06C3                             l958 0600  
                           l990 0790                             l982 076E                             l974 0756  
                           l888 0628                             l968 06D8                             l896 06DB  
                           l992 079D                             l984 0777                             l976 0765  
                           l898 06DD                             l994 07B6                             l986 0780  
                           l978 0768                             l988 0787                             l996 07BB  
                           l998 07C4                             u300 0702                             u301 0701  
                           u320 0712                             u400 0780                             u321 0711  
                           u305 06FE                             u401 077F                             u250 0678  
                           u330 071F                             u410 0787                             u251 0677  
                           u315 0708                             u331 071E                             u411 0786  
                           u260 06E3                             u340 073E                             u420 0790  
                           u261 06E2                             u341 073D                             u421 078F  
                           u350 0661                             u430 079D                             u351 065F  
                           u431 079C                             u280 06F3                             u360 0662  
                           u440 07B6                             u281 06F2                             u345 073A  
                           u441 07B5                             u370 06C3                             u450 07C4  
                           u371 06C2                             u275 06E7                             u451 07C3  
                           u380 06D8                             u460 07CD                             u381 06D7  
                           u461 07CC                             u470 07D4                             u390 0761  
                           u295 06F4                             u471 07D3                             u480 07EA  
                           u481 07E9                             wreg 0009                            l1000 07CD  
                          l1002 07D4                            l1004 07D8                            l1006 07E1  
                          _LATA 0018                            _PMD0 0796                            _PMD1 0797  
                          _PMD2 0798                            _PMD3 0799                            _PMD4 079A  
                          _PMD5 079B                            _WPUA 1F39                     _output_isOn 0606  
                          _main 0756                            fsr0h 0005                            fsr1h 0007  
                          indf0 0000                            fsr0l 0004                            indf1 0001  
                          fsr1l 0006                            btemp 007E                            start 0002  
              outputOn@theState 0070   __end_of_OSCILLATOR_Initialize 062F                           _ADACT 009F  
                         ?_main 0070                 __end_of___lwdiv 0717                           _OSCEN 0891  
                         _TRISA 0012               _battery_isHealthy 06AB                    main@theState 002B  
            ?_battery_isHealthy 0070         vehicle_running@theState 0074                           status 0003  
                         wtemp0 007E               outputOff@theState 0070             ??_battery_isHealthy 0070  
         button_update@theState 0077                 __initialization 07F4                    __end_of_main 07F4  
               _vehicle_running 064A                          ??_main 0025       __end_of_battery_isHealthy 06DB  
                        _ADCON0 009D                          _ADCON1 009E                          _ADRESH 009C  
                        _ADRESL 009B                          _ANSELA 1F38                          _ODCONA 1F3A  
                        _INLVLA 1F3C                          _OSCFRQ 0893                       ??___lwdiv 0074  
                _PMD_Initialize 0615        ADC_GetConversion@channel 0073                __end_of_outputOn 0625  
             _SYSTEM_Initialize 062F         __end_of__initialization 07FE              ?_SYSTEM_Initialize 0070  
       __end_of_vehicle_running 0663                  __pcstackCOMMON 0070                  _battery_update 067D  
           ??_SYSTEM_Initialize 0070          __end_of_PMD_Initialize 061D       __end_of_SYSTEM_Initialize 063C  
                    __pbssBANK0 003C                    ?_output_isOn 0070                   _button_update 0717  
        __end_of_battery_update 06AB                      __pmaintext 0756            battery_update@counts 0020  
               ?_PMD_Initialize 0070                         _OSCCON1 088D                         _OSCCON3 088F  
                       _OSCSTAT 0890                         _OSCTUNE 0892                         _SLRCONA 1F3B  
           output_isOn@theState 0070                  ?_button_update 0070            _ADC_InterruptHandler 007C  
               ?_battery_update 0070                ?_vehicle_running 0070                         ___lwdiv 06DB  
        battery_update@theState 0024                       ?_outputOn 0070                         __ptext1 064A  
                       __ptext2 0606                         __ptext3 061D                         __ptext4 05FF  
                       __ptext5 0717                         __ptext6 067D                         __ptext7 06DB  
                       __ptext8 0663                         __ptext9 06AB           _OSCILLATOR_Initialize 0625  
      ??_PIN_MANAGER_Initialize 0070                         clrloop0 05FA            end_of_initialization 07FE  
                    ??_outputOn 0070               __end_of_outputOff 0606                       _PORTAbits 000C  
               ??_button_update 0072       battery_isHealthy@theState 0075                  _ADC_Initialize 060D  
        ?_OSCILLATOR_Initialize 0070             start_initialization 07F4            button_update@pressed 0075  
              ??_PMD_Initialize 0070          __end_of_ADC_Initialize 0615                     __pbssCOMMON 007C  
                     ___latbits 0000                   __pcstackBANK0 0020                ??_battery_update 0078  
              ___lwdiv@dividend 0072          _PIN_MANAGER_Initialize 063C                        ?___lwdiv 0070  
               ?_ADC_Initialize 0070             battery_update@volts 0022                ___lwdiv@quotient 0075  
                      _LATAbits 0018                       clear_ram0 05F9                       main@F6242 003C  
                    _ADCON0bits 009D                 main@buttonValue 0029                       _outputOff 05FF  
             _ADC_GetConversion 0663         ??_OSCILLATOR_Initialize 0070              ?_ADC_GetConversion 0070  
           ??_ADC_GetConversion 0072                      ?_outputOff 0070                 ___lwdiv@divisor 0070  
               ___lwdiv@counter 0077                        __ptext10 062F                        __ptext11 0615  
                      __ptext12 063C                        __ptext13 0625                        __ptext14 060D  
                 ??_output_isOn 0070           __end_of_button_update 0756       __end_of_ADC_GetConversion 067D  
                      _outputOn 061D               ??_vehicle_running 0070         ?_PIN_MANAGER_Initialize 0070  
              ??_ADC_Initialize 0070             __end_of_output_isOn 060D                     ??_outputOff 0070  
      battery_isHealthy@healthy 0074  __end_of_PIN_MANAGER_Initialize 064A  
